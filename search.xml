<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HAProxy介绍&amp;安装&amp;编译安装&amp;配置详解</title>
    <url>/2020/03/11/HAProxy%E4%BB%8B%E7%BB%8D-%E5%AE%89%E8%A3%85-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<!-- TOC -->

<ul>
<li><a href="#jumpserver">Jumpserver</a><ul>
<li><a href="#jumpserver介绍">jumpserver介绍</a></li>
<li><a href="#部署环境">部署环境</a><ul>
<li><a href="#官方服务器配置">官方服务器配置：</a></li>
<li><a href="#服务器准备">服务器准备：</a></li>
<li><a href="#部署mysql服务">部署mysql服务</a><ul>
<li><a href="#docker-pull-mysql镜像">docker pull mysql镜像</a></li>
<li><a href="#mysqldcnf配置文件">mysqld.cnf配置文件</a></li>
<li><a href="#mysqlcnf的配置文件">mysql.cnf的配置文件</a></li>
<li><a href="#创建mysql的数据目录">创建mysql的数据目录</a></li>
<li><a href="#运行mysql容器">运行mysql容器</a></li>
<li><a href="#创建jumpserver数据库">创建jumpserver数据库</a></li>
</ul>
</li>
<li><a href="#部署redis服务">部署redis服务：</a></li>
<li><a href="#部署jumpserver">部署jumpserver</a></li>
</ul>
</li>
<li><a href="#jumpserver部署完成">jumpserver部署完成</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="Jumpserver"><a href="#Jumpserver" class="headerlink" title="Jumpserver"></a>Jumpserver</h1><h2 id="jumpserver介绍"><a href="#jumpserver介绍" class="headerlink" title="jumpserver介绍"></a>jumpserver介绍</h2><p>Jumpserver 是一款使用 Python, Django 开发的开源跳板机系统, 为互联网企业提供了认证，授权，审计，自动化运维等功能。<br><a href="https://img-blog.csdnimg.cn/20200311010403429.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE2MTI1OTI3,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200311010403429.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE2MTI1OTI3,size_16,color_FFFFFF,t_70" class="lazyload"></a></p>
<p>官方地址：<a href="http://www.jumpserver.org/" target="_blank" rel="noopener">http://www.jumpserver.org/</a><br><a href="https://img-blog.csdnimg.cn/20200311010421116.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200311010421116.png" class="lazyload"></a></p>
<ul>
<li>jumpserver与openvpn搭配<br><a href="https://img-blog.csdnimg.cn/20200311010433521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE2MTI1OTI3,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200311010433521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE2MTI1OTI3,size_16,color_FFFFFF,t_70" class="lazyload"></a></li>
</ul>
<h2 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h2><h3 id="官方服务器配置："><a href="#官方服务器配置：" class="headerlink" title="官方服务器配置："></a>官方服务器配置：</h3><ol>
<li>硬件配置: 2个CPU核心, 4G 内存, 50G 硬盘（最低）</li>
<li>操作系统: Linux 发行版 x86_64</li>
<li>Python = 3.6.x</li>
<li>Mysql Server ≥ 5.6</li>
<li>Mariadb Server ≥ 5.5.56</li>
<li>Redis<h3 id="服务器准备："><a href="#服务器准备：" class="headerlink" title="服务器准备："></a>服务器准备：</h3></li>
<li>192.168.37.100 jumpserver    2c-6G</li>
<li>192.168.37.100 数据库/Redis  2C-2G</li>
</ol>
<h3 id="部署mysql服务"><a href="#部署mysql服务" class="headerlink" title="部署mysql服务"></a>部署mysql服务</h3><ol>
<li>外置数据库要求</li>
<li>mysql 版本需要大于等于 5.6</li>
<li>mariadb 版本需要大于等于 5.5.6</li>
<li>数据库编码要求 uft8<h4 id="docker-pull-mysql镜像"><a href="#docker-pull-mysql镜像" class="headerlink" title="docker pull mysql镜像"></a>docker pull mysql镜像</h4></li>
<li>导入 docker load -i mysql5.6.x.tar.gz</li>
<li>直接docker官网pull数据库镜像：docker pull mysql:5.6.x<h4 id="mysqld-cnf配置文件"><a href="#mysqld-cnf配置文件" class="headerlink" title="mysqld.cnf配置文件"></a>mysqld.cnf配置文件</h4>将容器中的mysql配置文件在宿主机通过-v挂载到容器中。<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##mysqld.cnf配置文件：</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># mkdir /etc/mysql/mysql.conf.d -pv</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># cat /etc/mysql/mysql.conf.d/mysqld.cnf</span></span><br><span class="line"><span class="comment"># Copyright (c) 2014, 2016, Oracle and/or its affiliates. All rights reserved.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This program is free software; you can redistribute it and/or modify</span></span><br><span class="line"><span class="comment"># it under the terms of the GNU General Public License as published by</span></span><br><span class="line"><span class="comment"># the Free Software Foundation; version 2 of the License.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This program is distributed in the hope that it will be useful,</span></span><br><span class="line"><span class="comment"># but WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment"># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></span><br><span class="line"><span class="comment"># GNU General Public License for more details.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You should have received a copy of the GNU General Public License</span></span><br><span class="line"><span class="comment"># along with this program; if not, write to the Free Software</span></span><br><span class="line"><span class="comment"># Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The MySQL  Server configuration file.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For explanations see</span></span><br><span class="line"><span class="comment"># http://dev.mysql.com/doc/mysql/en/server-system-variables.html</span></span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">pid-file	= /var/run/mysqld/mysqld.pid</span><br><span class="line">socket		= /var/run/mysqld/mysqld.sock</span><br><span class="line">datadir		= /var/lib/mysql</span><br><span class="line"><span class="comment">#log-error	= /var/log/mysql/error.log</span></span><br><span class="line"><span class="comment"># Disabling symbolic-links is recommended to prevent assorted security risks</span></span><br><span class="line">symbolic-links=0</span><br><span class="line"></span><br><span class="line">character-set-server=utf8</span><br></pre></td></tr></table></figure></div>
<h4 id="mysql-cnf的配置文件"><a href="#mysql-cnf的配置文件" class="headerlink" title="mysql.cnf的配置文件"></a>mysql.cnf的配置文件</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ubuntu1804:~<span class="comment"># mkdir /etc/mysql/conf.d</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># cat /etc/mysql/conf.d/mysql.cnf</span></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure></div>
<h4 id="创建mysql的数据目录"><a href="#创建mysql的数据目录" class="headerlink" title="创建mysql的数据目录"></a>创建mysql的数据目录</h4>数据保存在宿主机上，实现数据与容器分离，当容器运行异常时也可以在启动一个新的容器直接使用宿主机的数据，从而保证业务的正产运行。<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ubuntu1804:~<span class="comment"># mkdir -pv /data/mysql</span></span><br><span class="line">mkdir: created directory <span class="string">'/data'</span></span><br><span class="line">mkdir: created directory <span class="string">'/data/mysql'</span></span><br></pre></td></tr></table></figure></div>
<h4 id="运行mysql容器"><a href="#运行mysql容器" class="headerlink" title="运行mysql容器"></a>运行mysql容器</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#docker安装略过</span></span><br><span class="line"><span class="comment">#启动docker内的mysql</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># docker pull mysql:5.6.47</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># docker run -it -d -p 3306:3306 -v /etc/mysql/mysql.conf.d/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf -v /etc/mysql/conf.d/mysql.cnf:/etc/mysql/conf.d/mysql.cnf -v /data/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD="joker@dt" mysql:5.6.47</span></span><br><span class="line">f7ae15e05832da5b3e5d201f5fe78b25dcd17d40b818633824544a4c5f4c227e</span><br><span class="line"><span class="comment">#查看端口是否映射</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># ss -nutl</span></span><br><span class="line">Netid        State          Recv-Q         Send-Q                    Local Address:Port                   Peer Address:Port         </span><br><span class="line">udp          UNCONN         0              0                         127.0.0.53%lo:53                          0.0.0.0:*            </span><br><span class="line">tcp          LISTEN         0              128                       127.0.0.53%lo:53                          0.0.0.0:*            </span><br><span class="line">tcp          LISTEN         0              128                             0.0.0.0:22                          0.0.0.0:*            </span><br><span class="line">tcp          LISTEN         0              128                           127.0.0.1:6010                        0.0.0.0:*            </span><br><span class="line">tcp          LISTEN         0              128                           127.0.0.1:6011                        0.0.0.0:*            </span><br><span class="line">tcp          LISTEN         0              128                                [::]:22                             [::]:*            </span><br><span class="line">tcp          LISTEN         0              128                               [::1]:6010                           [::]:*            </span><br><span class="line">tcp          LISTEN         0              128                               [::1]:6011                           [::]:*            </span><br><span class="line">tcp          LISTEN         0              128                                   *:3306                              *:*</span><br><span class="line"><span class="comment">#宿主机安装mysql客户端，远程连接docker内的mysql并验证数据库编码</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># apt install mysql-client-core-5.7 -y</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># mysql -uroot -pjoker@dt -h192.168.37.100</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 1</span><br><span class="line">Server version: 5.6.47 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">+--------------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show variables like <span class="string">"%character%"</span>;show variables like <span class="string">"%collation"</span>;</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name            | Value                      |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client     | utf8                       |</span><br><span class="line">| character_set_connection | utf8                       |</span><br><span class="line">| character_set_database   | utf8                       |</span><br><span class="line">| character_set_filesystem | binary                     |</span><br><span class="line">| character_set_results    | utf8                       |</span><br><span class="line">| character_set_server     | utf8                       |</span><br><span class="line">| character_set_system     | utf8                       |</span><br><span class="line">| character_sets_dir       | /usr/share/mysql/charsets/ |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">8 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">Empty <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure></div>
<h4 id="创建jumpserver数据库"><a href="#创建jumpserver数据库" class="headerlink" title="创建jumpserver数据库"></a>创建jumpserver数据库</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建jumpserver的mysql库及授权账号密码（密码不能纯数字否则jumpserver报错）</span></span><br><span class="line">mysql&gt; create database jumpserver default charset <span class="string">'utf8'</span>;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all on jumpserver.* to <span class="string">'jumpserver'</span>@<span class="string">'%'</span>identified by <span class="string">'joker@dt'</span>;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="部署redis服务："><a href="#部署redis服务：" class="headerlink" title="部署redis服务："></a>部署redis服务：</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ubuntu1804:~<span class="comment"># docker pull redis</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># docker run -it -d 6379:6379 redis:latest</span></span><br><span class="line"><span class="comment">#验证redis</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># redis-cli -h 192.168.37.100</span></span><br><span class="line">192.168.37.100:6379&gt;</span><br></pre></td></tr></table></figure></div>

</li>
</ol>
<h3 id="部署jumpserver"><a href="#部署jumpserver" class="headerlink" title="部署jumpserver"></a>部署jumpserver</h3><p>通过docker镜像部署</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ubuntu1804:~<span class="comment"># docker pull jumpserver/jms_all:1.4.8</span></span><br><span class="line"><span class="comment">#生成随即加密秘钥和初始化token</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># if [ "$SECRET_KEY" = "" ]; then SECRET_KEY=`cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 50`; echo "SECRET_KEY=$SECRET_KEY" &gt;&gt; ~/.bashrc; echo $SECRET_KEY; else echo $SECRET_KEY; fi</span></span><br><span class="line">Sbn2lErQrbpiwdESwUHefBQHEiyp9pPzwttFwk5KV556I1YA80   </span><br><span class="line">root@ubuntu1804:~<span class="comment"># if [ "$BOOTSTRAP_TOKEN" = "" ]; then BOOTSTRAP_TOKEN=`cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`; echo "BOOTSTRAP_TOKEN=$BOOTSTRAP_TOKEN" &gt;&gt; ~/.bashrc; echo $BOOTSTRAP_TOKEN; else echo $BOOTSTRAP_TOKEN; fi</span></span><br><span class="line">LulNx6MkCDtRFRZ1</span><br><span class="line"><span class="comment">#start jumpserver</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># docker run --name jms_all -d \</span></span><br><span class="line">&gt;     -v /opt/jumpserver:/opt/jumpserver/data/media \</span><br><span class="line">&gt;     -p 80:80 \</span><br><span class="line">&gt;     -p 2222:2222 \</span><br><span class="line">&gt;     -e SECRET_KEY=Sbn2lErQrbpiwdESwUHefBQHEiyp9pPzwttFwk5KV556I1YA80 \</span><br><span class="line">&gt;     -e BOOTSTRAP_TOKEN=LulNx6MkCDtRFRZ1 \</span><br><span class="line">&gt;     -e DB_HOST=192.168.37.100 \</span><br><span class="line">&gt;     -e DB_PORT=3306 \</span><br><span class="line">&gt;     -e DB_USER=jumpserver \</span><br><span class="line">&gt;     -e DB_PASSWORD=joker@dt \</span><br><span class="line">&gt;     -e DB_NAME=jumpserver \</span><br><span class="line">&gt;     -e REDIS_HOST=192.168.37.100 \</span><br><span class="line">&gt;     -e REDIS_PORT=6379 \</span><br><span class="line">&gt;     -e REDIS_PASSWORD= \</span><br><span class="line">&gt;     jumpserver/jms_all:1.4.8</span><br><span class="line">57033a1cabdc2637be71e949c7fc391eb1d219ab96f3ab7e0f3e2e197ca7538c</span><br></pre></td></tr></table></figure></div>
<h2 id="jumpserver部署完成"><a href="#jumpserver部署完成" class="headerlink" title="jumpserver部署完成"></a>jumpserver部署完成</h2><blockquote>
<pre><code>-e REDIS_HOST=192.168.37.100 \
-e REDIS_PORT=6379 \
-e REDIS_PASSWORD= \
jumpserver/jms_all:1.4.8</code></pre><p>57033a1cabdc2637be71e949c7fc391eb1d219ab96f3ab7e0f3e2e197ca7538c</p>
</blockquote>
<pre><code>## jumpserver部署完成
可通过web登陆：http://192.168.37.100 账户和密码都是admin</code></pre>]]></content>
      <categories>
        <category>HAProxy</category>
      </categories>
      <tags>
        <tag>HAProxy</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis主从复制配置</title>
    <url>/2020/03/14/Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<!-- TOC -->

<ul>
<li><a href="#redis主从配置">redis主从配置</a><ul>
<li><a href="#主redis服务器配置">主redis服务器配置</a></li>
<li><a href="#从redis服务器配置">从redis服务器配置</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="redis主从配置"><a href="#redis主从配置" class="headerlink" title="redis主从配置"></a>redis主从配置</h1><ol>
<li><p>要求：</p>
<ul>
<li>编译安装</li>
<li>版本一致</li>
<li>主从密码一致</li>
</ul>
</li>
</ol>
<h2 id="主redis服务器配置"><a href="#主redis服务器配置" class="headerlink" title="主redis服务器配置"></a>主redis服务器配置</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#主要修改的配置参数，其他的保持默认，以下只列出修改的参数</span></span><br><span class="line">[root@CentOS7 ~]<span class="comment"># grep "^[a-Z]" /apps/redis/etc/redis.conf</span></span><br><span class="line"><span class="built_in">bind</span> 0.0.0.0 <span class="comment">#修改ip地址，允许该网段主机联机</span></span><br><span class="line">logfile <span class="string">"/apps/redis/logs/redis.log"</span> <span class="comment">#修改日志存放路径，并有redis用户和组权限</span></span><br><span class="line">dir /apps/redis/data <span class="comment">#修改rdb快照文件路径，并有redis用户和组权限</span></span><br><span class="line">requirepass 123456 <span class="comment">#设置redis登陆密码</span></span><br></pre></td></tr></table></figure></div>

<h2 id="从redis服务器配置"><a href="#从redis服务器配置" class="headerlink" title="从redis服务器配置"></a>从redis服务器配置</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#主要修改的配置参数，其他的保持默认，以下只列出修改的参数</span></span><br><span class="line">[root@CentOS7 ~]<span class="comment"># grep "^[a-Z]" /apps/redis/etc/redis.conf</span></span><br><span class="line"><span class="built_in">bind</span> 0.0.0.0 <span class="comment">#修改ip地址，允许该网段主机联机</span></span><br><span class="line">logfile <span class="string">"/apps/redis/logs/redis.log"</span> <span class="comment">#修改日志存放路径，并有redis用户和组权限</span></span><br><span class="line">dir /apps/redis/data <span class="comment">#修改rdb快照文件路径，并有redis用户和组权限</span></span><br><span class="line">replicaof 192.168.37.10 6379 <span class="comment">#配置master的redis服务器的ip和port</span></span><br><span class="line">masterauth 123456 <span class="comment">#配置master的redis密码</span></span><br><span class="line">requirepass 123456 <span class="comment">#设置本机redis服务器登陆密码</span></span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis基础命令</title>
    <url>/2020/03/14/Redis%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<!-- TOC -->

<ul>
<li><a href="#redis基础命令">redis基础命令</a></li>
</ul>
<!-- /TOC -->

<h1 id="redis基础命令"><a href="#redis基础命令" class="headerlink" title="redis基础命令"></a>redis基础命令</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#redis设置密码</span></span><br><span class="line">127.0.0.1:6379&gt; config <span class="built_in">set</span> requirepass 123456</span><br><span class="line"><span class="comment">#redis查看配置</span></span><br><span class="line">127.0.0.1:6379&gt; config get *</span><br><span class="line"><span class="comment">#显示当前节点redis运行状态信息</span></span><br><span class="line">127.0.0.1:6379&gt; info</span><br><span class="line"><span class="comment">#切换数据库，等于mysql的use dbname指令</span></span><br><span class="line">127.0.0.1:6379&gt; select 1</span><br><span class="line"><span class="comment">#查看当前库的所有key，数据少的时候使用，否则容易卡死</span></span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line"><span class="comment">#手动后台执行RDB持久化操作</span></span><br><span class="line">127.0.0.1:6379&gt; bgsave</span><br><span class="line">Background saving started</span><br><span class="line"><span class="comment">#redis快照强制关闭无法持久化解锁：</span></span><br><span class="line">127.0.0.1:6379&gt; config <span class="built_in">set</span> stop-writes-on-bgsave-error no</span><br><span class="line">OK</span><br><span class="line"><span class="comment">#查询当前库下的所有key的数量</span></span><br><span class="line">127.0.0.1:6379&gt; dbsize</span><br><span class="line">(<span class="built_in">integer</span>) 5</span><br><span class="line"><span class="comment">##强制清空当前库下所有key</span></span><br><span class="line">127.0.0.1:6379&gt; flushdb</span><br><span class="line">OK</span><br><span class="line"><span class="comment">##强制清空当前redis服务器所有数据库中的所有key，即删除所有数据</span></span><br><span class="line">127.0.0.1:6379&gt; flushall</span><br><span class="line">OK</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis数据持久化保存机制介绍</title>
    <url>/2020/03/14/Redis%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96%E4%BF%9D%E5%AD%98%E6%9C%BA%E5%88%B6%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<!-- TOC -->

<ul>
<li><a href="#redis持久化">redis持久化</a><ul>
<li><a href="#rob模式">ROB模式</a><ul>
<li><a href="#rdb模式优缺点">RDB模式优缺点</a></li>
</ul>
</li>
<li><a href="#aof模式">AOF模式</a><ul>
<li><a href="#优缺点">优缺点</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="redis持久化"><a href="#redis持久化" class="headerlink" title="redis持久化"></a>redis持久化</h1><p>redis支持两种不同方式的数据持久化保存机制</p>
<pre><code>- RDB
- AOF</code></pre><h2 id="ROB模式"><a href="#ROB模式" class="headerlink" title="ROB模式"></a>ROB模式</h2><pre><code>DB(Redis DataBase)：基于时间的快照，其默认只保留当前最新的一次快照，特点是执行速度比较快，缺点是可能会丢失从上次快照到当前时间点之间未做快照的数据。</code></pre><p>RDB实现的具体过程Redis从主进程先fork出一个子进程，使用写时复制机制，子进程将内存的数据保存为一个临<br>时文件，比如dump.rdb.temp，当数据保存完成之后再将上一次保存的RDB文件替换掉，然后关闭子进程，这样<br>可以保存每一次做RDB快照的时候保存的数据都是完整的，因为直接替换RDB文件的时候可能会出现突然断电等问<br>题而导致RDB文件还没有保存完整就突然关机停止保存而导致数据丢失的情况，可以手动将每次生成的RDB文件进<br>程备份，这样可以最大化保存历史数据。</p>
<p><a href="/2020/03/14/Redis%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96%E4%BF%9D%E5%AD%98%E6%9C%BA%E5%88%B6%E4%BB%8B%E7%BB%8D/RDB.png" data-fancybox="group" data-caption="RDB" class="fancybox"><img alt="RDB" title="RDB" data-src="/2020/03/14/Redis%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96%E4%BF%9D%E5%AD%98%E6%9C%BA%E5%88%B6%E4%BB%8B%E7%BB%8D/RDB.png" class="lazyload"></a></p>
<h3 id="RDB模式优缺点"><a href="#RDB模式优缺点" class="headerlink" title="RDB模式优缺点"></a>RDB模式优缺点</h3><ul>
<li><p>优点</p>
<p>  RDB快照保存了某个时间点的数据，可以通过脚本执行bgsave(非阻塞)或者save(阻<br>  塞)命令自定义时间点备份，可以保留多个备份，当出现问题可以恢复到不同时间<br>  点的版本。 可以最大化IO 的性能，因为父进程在保存RDB 文件的时候唯一要做的<br>  是fork出一个子进程，然后的-操作都会有这个子进程操作，父进程无需任何的IO<br>  操作RDB在大量数据比如几个G的数据，恢复的速度比AOF的快</p>
</li>
<li><p>缺点</p>
<p>  不能时时的保存数据，会丢失自上一次执行RDB备份到当前的内存数据 -数据量非常大<br>  的时候，从父进程fork的时候需要一点时间，可能是毫秒或者秒或者分钟，取决于磁<br>  盘IO性能。</p>
</li>
</ul>
<h2 id="AOF模式"><a href="#AOF模式" class="headerlink" title="AOF模式"></a>AOF模式</h2><pre><code>AOF：按照操作顺序依次将操作添加到指定的日志文件当中，特点是数据安全性相对较
高，缺点是即使有些操作是重复的也会全部记录。</code></pre><p>AOF和RDB一样使用了写时复制机制，AOF默认为每秒钟fsync一次，即将执行的命令保存到<br>AOF文件当中，这样即使redis服务器发生故障的话顶多也就丢失1秒钟之内的数据，也可以<br>设置不同的fsync策略，或者设置每次执行命令的时候执行fsync，fsync会在后台执行线程<br>，所以主线程可以继续处理用户的正常请求而不受到写入AOF文件的IO影响。</p>
<h3 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h3><pre><code>1. AOF的文件大于RDB格式的文件
2. 根据所使用的fsync策略(fsync是同步内存中redis所有已经修改的文件到存储设备)
，默认是appendfsync everysec即每秒执行一次fsync。</code></pre>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis编译安装</title>
    <url>/2020/03/14/Redis%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<!-- TOC -->

<ul>
<li><a href="#redis编译安装">Redis编译安装</a><ul>
<li><a href="#官方下载redis源码包">官方下载Redis源码包</a></li>
<li><a href="#下载源码包">下载源码包</a></li>
<li><a href="#解压redis源码包及编译">解压redis源码包及编译</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->
<h1 id="Redis编译安装"><a href="#Redis编译安装" class="headerlink" title="Redis编译安装"></a>Redis编译安装</h1><h2 id="官方下载Redis源码包"><a href="#官方下载Redis源码包" class="headerlink" title="官方下载Redis源码包"></a>官方下载Redis源码包</h2><pre><code>http://download.redis.io/releases/
本次编译下载5.0.3</code></pre><p><a href="https://img-blog.csdnimg.cn/20200211213022731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE2MTI1OTI3,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200211213022731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE2MTI1OTI3,size_16,color_FFFFFF,t_70" class="lazyload"></a></p>
<h2 id="下载源码包"><a href="#下载源码包" class="headerlink" title="下载源码包"></a>下载源码包</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@CentOS7 ~]<span class="comment"># cd /usr/local/src/</span></span><br><span class="line">[root@CentOS7 src]<span class="comment"># wget http://download.redis.io/releases/redis-5.0.3.tar.gz</span></span><br></pre></td></tr></table></figure></div>
<h2 id="解压redis源码包及编译"><a href="#解压redis源码包及编译" class="headerlink" title="解压redis源码包及编译"></a>解压redis源码包及编译</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#解压redis源码包</span></span><br><span class="line">[root@CentOS7 src]<span class="comment"># tar xfv redis-5.0.3.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装编译依赖包</span></span><br><span class="line">[root@CentOS7 src]<span class="comment"># yum install jemalloc gcc make -y</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#开始编译</span></span><br><span class="line">[root@CentOS7 src]<span class="comment"># make PREFIX=/apps/redis MALLOC=libc install</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建配置文件，日志，数据等目录</span></span><br><span class="line">[root@CentOS7 redis-5.0.3]<span class="comment"># mkdir /apps/redis/&#123;etc,logs.run,data&#125;</span></span><br><span class="line">[root@CentOS7 redis-5.0.3]<span class="comment"># cd /usr/local/src/redis-5.0.3/</span></span><br><span class="line">[root@CentOS7 redis-5.0.3]<span class="comment"># cp redis.conf /apps/redis/etc/	#复制redis配置文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#前台启动redis</span></span><br><span class="line">[root@CentOS7 ~]<span class="comment"># /apps/redis/bin/redis-server /apps/redis/etc/redis.conf </span></span><br><span class="line">11067:C 11 Feb 2020 22:22:24.566 <span class="comment"># oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span></span><br><span class="line">11067:C 11 Feb 2020 22:22:24.567 <span class="comment"># Redis version=5.0.3, bits=64, commit=00000000, modified=0, pid=11067, just started</span></span><br><span class="line">11067:C 11 Feb 2020 22:22:24.567 <span class="comment"># Configuration loaded</span></span><br><span class="line">11067:M 11 Feb 2020 22:22:24.567 * Increased maximum number of open files to 10032 (it was originally <span class="built_in">set</span> to 1024).</span><br><span class="line">                _._                                                  </span><br><span class="line">           _.-``__ <span class="string">''</span>-._                                             </span><br><span class="line">      _.-``    `.  `_.  <span class="string">''</span>-._           Redis 5.0.3 (00000000/0) 64 bit</span><br><span class="line">  .-`` .-```.  ```\/    _.,_ <span class="string">''</span>-._                                   </span><br><span class="line"> (    <span class="string">'      ,       .-`  | `,    )     Running in standalone mode</span></span><br><span class="line"><span class="string"> |`-._`-...-` __...-.``-._|'</span>` _.-<span class="string">'|     Port: 6379</span></span><br><span class="line"><span class="string"> |    `-._   `._    /     _.-'</span>    |     PID: 11067</span><br><span class="line">  `-._    `-._  `-./  _.-<span class="string">'    _.-'</span>                                   </span><br><span class="line"> |`-._`-._    `-.__.-<span class="string">'    _.-'</span>_.-<span class="string">'|                                  </span></span><br><span class="line"><span class="string"> |    `-._`-._        _.-'</span>_.-<span class="string">'    |           http://redis.io        </span></span><br><span class="line"><span class="string">  `-._    `-._`-.__.-'</span>_.-<span class="string">'    _.-'</span>                                   </span><br><span class="line"> |`-._`-._    `-.__.-<span class="string">'    _.-'</span>_.-<span class="string">'|                                  </span></span><br><span class="line"><span class="string"> |    `-._`-._        _.-'</span>_.-<span class="string">'    |                                  </span></span><br><span class="line"><span class="string">  `-._    `-._`-.__.-'</span>_.-<span class="string">'    _.-'</span>                                   </span><br><span class="line">      `-._    `-.__.-<span class="string">'    _.-'</span>                                       </span><br><span class="line">          `-._        _.-<span class="string">'                                           </span></span><br><span class="line"><span class="string">              `-.__.-'</span>                                               </span><br><span class="line"></span><br><span class="line">11067:M 11 Feb 2020 22:22:24.568 <span class="comment"># WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</span></span><br><span class="line">11067:M 11 Feb 2020 22:22:24.568 <span class="comment"># Server initialized</span></span><br><span class="line">11067:M 11 Feb 2020 22:22:24.568 <span class="comment"># WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.</span></span><br><span class="line">11067:M 11 Feb 2020 22:22:24.568 <span class="comment"># WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.</span></span><br><span class="line">11067:M 11 Feb 2020 22:22:24.568 * DB loaded from disk: 0.000 seconds</span><br><span class="line"></span><br><span class="line"><span class="comment">#解决当前的WARNING</span></span><br><span class="line">[root@CentOS7 ~]<span class="comment"># cat /etc/sysctl.conf | grep '^[a-Z]'</span></span><br><span class="line">vm.overcommit_memory = 1</span><br><span class="line">net.core.somaxconn = 512</span><br><span class="line">[root@CentOS7 ~]<span class="comment"># echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#编辑redis服务启动脚本</span></span><br><span class="line">[root@CentOS7 src]<span class="comment"># vim /usr/lib/systemd/system/redis.service </span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Redis persistent key-value database</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="comment">#ExecStart=/usr/bin/redis-server /etc/redis.conf --supervised systemd</span></span><br><span class="line">ExecStart=/apps/redis/bin/redis-server /apps/redis/etc/redis.conf --supervised systemd</span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -s HUP <span class="variable">$MAINPID</span></span><br><span class="line">ExecStop=/bin/<span class="built_in">kill</span> -s QUIT <span class="variable">$MAINPID</span></span><br><span class="line">Type=notify</span><br><span class="line">User=redis</span><br><span class="line">Group=redis</span><br><span class="line">RuntimeDirectory=redis</span><br><span class="line">RuntimeDirectoryMode=0755</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建redis启动账户及授权</span></span><br><span class="line">[root@CentOS7 ~]<span class="comment"># groupadd -g 995 redis &amp;&amp; useradd -u 997 -g 995 redis -s /sbin/nologin</span></span><br><span class="line">[root@CentOS7 ~]<span class="comment"># chown redis.redis -R /apps/redis/</span></span><br><span class="line">[root@CentOS7 ~]<span class="comment"># systemctl daemon-reload</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动redis服务，服务端口是6379；</span></span><br><span class="line">[root@CentOS7 ~]<span class="comment"># systemctl start redis</span></span><br><span class="line">[root@CentOS7 ~]<span class="comment"># ss -nutl</span></span><br><span class="line">Netid  State      Recv-Q Send-Q Local Address:Port               Peer Address:Port              </span><br><span class="line">tcp    LISTEN     0      511    127.0.0.1:6379                       *:*                  </span><br><span class="line">tcp    LISTEN     0      128            *:22                         *:*                  </span><br><span class="line">tcp    LISTEN     0      100    127.0.0.1:25                         *:*                  </span><br><span class="line">tcp    LISTEN     0      128           :::22                        :::*                  </span><br><span class="line">tcp    LISTEN     0      100          ::1:25                        :::*</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建软连接命令</span></span><br><span class="line">[root@CentOS7 ~]<span class="comment"># ln -sv /apps/redis/bin/redis-* /usr/bin/</span></span><br><span class="line">‘/usr/bin/redis-benchmark’ -&gt; ‘/apps/redis/bin/redis-benchmark’</span><br><span class="line">‘/usr/bin/redis-check-aof’ -&gt; ‘/apps/redis/bin/redis-check-aof’</span><br><span class="line">‘/usr/bin/redis-check-rdb’ -&gt; ‘/apps/redis/bin/redis-check-rdb’</span><br><span class="line">‘/usr/bin/redis-cli’ -&gt; ‘/apps/redis/bin/redis-cli’</span><br><span class="line">‘/usr/bin/redis-sentinel’ -&gt; ‘/apps/redis/bin/redis-sentinel’</span><br><span class="line">‘/usr/bin/redis-server’ -&gt; ‘/apps/redis/bin/redis-server’</span><br><span class="line"></span><br><span class="line"><span class="comment">#编译安装后redis命令</span></span><br><span class="line">[root@CentOS7 ~]<span class="comment"># ll /apps/redis/bin/</span></span><br><span class="line">total 32672</span><br><span class="line">-rwxr-xr-x 1 redis redis 4366640 Feb 11 22:09 redis-benchmark	<span class="comment">#redis性能测试工具</span></span><br><span class="line">-rwxr-xr-x 1 redis redis 8090072 Feb 11 22:09 redis-check-aof	<span class="comment">#AOF文件检查工具</span></span><br><span class="line">-rwxr-xr-x 1 redis redis 8090072 Feb 11 22:09 redis-check-rdb	<span class="comment">#RDB文件检查工具</span></span><br><span class="line">-rwxr-xr-x 1 redis redis 4801904 Feb 11 22:09 redis-cli	<span class="comment">#客户端工具</span></span><br><span class="line">lrwxrwxrwx 1 redis redis      12 Feb 11 22:09 redis-sentinel -&gt; redis-server	<span class="comment">#哨兵，软连接到server	</span></span><br><span class="line">-rwxr-xr-x 1 redis redis 8090072 Feb 11 22:09 redis-server	<span class="comment">#redis 服务启动命令</span></span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>gitlab 初识</title>
    <url>/2020/03/12/gitlab-%E5%88%9D%E8%AF%86/</url>
    <content><![CDATA[<!-- TOC -->

<ul>
<li><a href="#gitlab介绍">gitlab介绍</a><ul>
<li><a href="#常见的代码部署工具">常见的代码部署工具</a></li>
<li><a href="#"></a></li>
</ul>
</li>
<li><a href="#gitlab安装部署">gitlab安装部署</a><ul>
<li><a href="#gitlab本次实验环境">gitlab本次实验环境</a><ul>
<li><a href="#下载地址">下载地址</a></li>
<li><a href="#下载gitlab安装包社区版">下载gitlab安装包（社区版）</a></li>
<li><a href="#初始化gitlab服务">初始化gitlab服务</a></li>
<li><a href="#gitlab安装路径">gitlab安装路径</a></li>
<li><a href="#gitlab-常用命令">gitlab 常用命令</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<!-- /TOC -->
<h1 id="gitlab介绍"><a href="#gitlab介绍" class="headerlink" title="gitlab介绍"></a>gitlab介绍</h1><pre><code>简单的来说gitlab适用于开发集成平台，用于代码协作的开源软件</code></pre><h2 id="常见的代码部署工具"><a href="#常见的代码部署工具" class="headerlink" title="常见的代码部署工具"></a>常见的代码部署工具</h2><ol>
<li><p>CVS：早期的集中式版本控制系统，现已基淘汰 </p>
</li>
<li><p>SVN：2000年开始开发，目标就是替代CVS集中式管理，依赖于网络，一台服务器集中管理依然有部分公司在使用。</p>
<p> 特性：任何的提交和回滚都依赖于连接服务器SVN服务器的单点<br> <a href="/2020/03/12/gitlab-%E5%88%9D%E8%AF%86/SVN.png" data-fancybox="group" data-caption="SVN" class="fancybox"><img alt="SVN" title="SVN" data-src="/2020/03/12/gitlab-%E5%88%9D%E8%AF%86/SVN.png" class="lazyload"></a></p>
</li>
<li><p>gitlab：分布式版本控制系统。</p>
<p> git在每个用户都有一个完整的服务器，然后在有一个中央服务器，用户可以先将代码提交到本地，没有网络也可以先提交到本地，然后在有网络的时候再提交到中央服务器，这样就大大方便了开发者的代码提交和回滚。<br> <a href="/2020/03/12/gitlab-%E5%88%9D%E8%AF%86/gitlab.png" data-fancybox="group" data-caption="gitlab" class="fancybox"><img alt="gitlab" title="gitlab" data-src="/2020/03/12/gitlab-%E5%88%9D%E8%AF%86/gitlab.png" class="lazyload"></a></p>
<h2 id><a href="#" class="headerlink" title></a></h2><h1 id="gitlab安装部署"><a href="#gitlab安装部署" class="headerlink" title="gitlab安装部署"></a>gitlab安装部署</h1><h2 id="gitlab本次实验环境"><a href="#gitlab本次实验环境" class="headerlink" title="gitlab本次实验环境"></a>gitlab本次实验环境</h2></li>
<li><p>服务器配置：2核4G</p>
</li>
<li><p>IP地址：192.168.37.110</p>
</li>
<li><p>os：ubuntu1804</p>
</li>
</ol>
<h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><pre><code>官网：https://packages.gitlab.com/gitlab/gitlab-ce
rpm包：https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/
ubuntu：https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/ubuntu/pool/</code></pre><h3 id="下载gitlab安装包（社区版）"><a href="#下载gitlab安装包（社区版）" class="headerlink" title="下载gitlab安装包（社区版）"></a>下载gitlab安装包（社区版）</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ubuntu1804:~<span class="comment"># wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/ubuntu/pool/bionic/main/g/gitlab-ce/gitlab-ce_11.11.8-ce.0_amd64.deb</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># dpkg -i gitlab-ce_11.11.8-ce.0_amd64.deb</span></span><br><span class="line"><span class="comment">#配置gitlab</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># grep "^[a-Z]" /etc/gitlab/gitlab.rb </span></span><br><span class="line">external_url <span class="string">'http://192.168.37.110'</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_enable'</span>] = <span class="literal">true</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_address'</span>] = <span class="string">"smtp.qq.com"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_port'</span>] = 465</span><br><span class="line">gitlab_rails[<span class="string">'smtp_user_name'</span>] = <span class="string">"760245899@qq.com"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_password'</span>] = <span class="string">"hrtnwpfjrdbbbcga"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_domain'</span>] = <span class="string">"qq.com"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_authentication'</span>] = <span class="string">"login"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_enable_starttls_auto'</span>] = <span class="literal">true</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_tls'</span>] = <span class="literal">true</span></span><br><span class="line">gitlab_rails[<span class="string">'gitlab_email_from'</span>]=<span class="string">"760245899@qq.com"</span></span><br><span class="line">user[<span class="string">"git_user_email"</span>]=<span class="string">"760245899@qq.com"</span></span><br></pre></td></tr></table></figure></div>
<h3 id="初始化gitlab服务"><a href="#初始化gitlab服务" class="headerlink" title="初始化gitlab服务"></a>初始化gitlab服务</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ubuntu1804:~<span class="comment"># gitlab-cli reconfigure</span></span><br></pre></td></tr></table></figure></div>
<h3 id="gitlab安装路径"><a href="#gitlab安装路径" class="headerlink" title="gitlab安装路径"></a>gitlab安装路径</h3><pre><code>/etc/gitlab #配置文件目录
/run/gitlab #运行pid目录
/opt/gitlab #安装目录
/var/opt/gitlab #数据目录
/var/log/gitlab #日志目录</code></pre><h3 id="gitlab-常用命令"><a href="#gitlab-常用命令" class="headerlink" title="gitlab 常用命令"></a>gitlab 常用命令</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#用于启动控制台进行特殊操作，比如修改管理员密码，打开数据库控制台</span></span><br><span class="line">gitlab-rails </span><br><span class="line"></span><br><span class="line"><span class="comment">#数据库命令：gitlab-psql </span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># gitlab-psql </span></span><br><span class="line">psql (9.6.11)</span><br><span class="line">Type <span class="string">"help"</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line"></span><br><span class="line">gitlabhq_production=<span class="comment"># \db</span></span><br><span class="line">         List of tablespaces</span><br><span class="line">    Name    |    Owner    | Location </span><br><span class="line">------------+-------------+----------</span><br><span class="line"> pg_default | gitlab-psql | </span><br><span class="line"> pg_global  | gitlab-psql | </span><br><span class="line">(2 rows)</span><br><span class="line"></span><br><span class="line">gitlabhq_production=<span class="comment"># \q</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据备份恢复等数据操作</span></span><br><span class="line">gitlab-rake</span><br><span class="line"></span><br><span class="line"><span class="comment">#客户端命令行操作行</span></span><br><span class="line">gitlab-ctl</span><br><span class="line">gitlab-ctl stop <span class="comment">#停止gitlab</span></span><br><span class="line">gitlab-ctl start <span class="comment">#启动gitlab</span></span><br><span class="line">gitlab-ctl restart <span class="comment">#重启gitlab</span></span><br><span class="line">gitlab-ctl status <span class="comment">#查看组件运行状态</span></span><br><span class="line">gitlab-ctl tail nginx <span class="comment">#查看某个组件的日志</span></span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>Gitlab</category>
      </categories>
      <tags>
        <tag>Gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s二进制部署-ansible</title>
    <url>/2020/04/13/k8s%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2-ansible/</url>
    <content><![CDATA[<!-- TOC -->

<ul>
<li><a href="#k8s二进制部署-ansible">k8s二进制部署-ansible</a><ul>
<li><a href="#环境准备">环境准备</a></li>
<li><a href="#创建主机秘钥实现各主机免密登陆">创建主机秘钥，实现各主机免密登陆</a></li>
<li><a href="#配置各个服务器主机hosts解析如有内网dns可以做域名解析">配置各个服务器主机hosts解析，如有内网dns可以做域名解析</a></li>
<li><a href="#将次hosts解析文件拷贝到所有主机通过脚本执行">将次hosts解析文件拷贝到所有主机，通过脚本执行</a></li>
<li><a href="#配置lb服务器">配置LB服务器</a><ul>
<li><a href="#配置lb-1">配置LB-1</a></li>
<li><a href="#配置lb-2">配置LB-2</a></li>
</ul>
</li>
<li><a href="#部署harbor服务器基于https协议">部署harbor服务器,基于https协议</a></li>
<li><a href="#master-1上安装ansible">master-1上安装ansible</a><ul>
<li><a href="#安装ansible服务">安装ansible服务</a></li>
<li><a href="#下载ansible的部署k8s的项目脚本">下载ansible的部署k8s的项目脚本</a></li>
<li><a href="#修改ansible的host文件">修改ansible的host文件</a></li>
<li><a href="#执行ansible-all--m-ping测试">执行ansible all -m ping测试</a></li>
<li><a href="#执行etcansible01prepareyml-环境初始化">执行/etc/ansible/01.prepare.yml 环境初始化</a></li>
<li><a href="#执行etcansible02etcdyml-安装etcd">执行/etc/ansible/02.etcd.yml 安装etcd</a></li>
<li><a href="#执行etcansible03dockeryml-安装docker">执行/etc/ansible/03.docker.yml 安装docker</a></li>
<li><a href="#部署master集群-执行ansible-playbook-04kube-masteryml">部署master集群 执行ansible-playbook 04.kube-master.yml</a></li>
<li><a href="#部署node节点-执行-ansible-playbook-05kube-nodeyml">部署node节点 执行 ansible-playbook 05.kube-node.yml</a></li>
<li><a href="#安装网络组件flannel-执行ansible-playbook-06networkyml">安装网络组件flannel 执行ansible-playbook 06.network.yml</a></li>
<li><a href="#添加master到集群">添加master到集群</a></li>
<li><a href="#添加node节点">添加node节点</a></li>
<li><a href="#版本升级1172升级到1174">版本升级1.17.2升级到1.17.4</a></li>
<li><a href="#部署dashboard的web界面">部署dashboard的web界面</a></li>
<li><a href="#dns部署">dns部署</a><ul>
<li><a href="#kube-dns部署">kube-dns部署</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="k8s二进制部署-ansible"><a href="#k8s二进制部署-ansible" class="headerlink" title="k8s二进制部署-ansible"></a>k8s二进制部署-ansible</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><pre><code>- 系统ubuntu1804，资源限制和内核参数已调好
- 时间校时
    ntpdate time1.aliyun.com &amp;&amp; hwclock -w
- 主机IP地址</code></pre><table>
<thead>
<tr>
<th>类型</th>
<th>服务器ip地址</th>
<th>主机名</th>
<th>hosts名称</th>
<th>VIP</th>
</tr>
</thead>
<tbody><tr>
<td>k8s-master-1</td>
<td>192.168.37.10</td>
<td>master-1</td>
<td>master-1.local.com</td>
<td></td>
</tr>
<tr>
<td>k8s-master-2</td>
<td>192.168.37.11</td>
<td>master-2</td>
<td>master-2.local.com</td>
<td>192.168.37.100</td>
</tr>
<tr>
<td>k8s-master-3</td>
<td>192.168.37.12</td>
<td>master-3</td>
<td>master-3.local.com</td>
<td></td>
</tr>
<tr>
<td>k8s-node-1</td>
<td>192.168.37.30</td>
<td>node-1</td>
<td>node-1.local.com</td>
<td></td>
</tr>
<tr>
<td>k8s-node-2</td>
<td>192.168.37.31</td>
<td>node-2</td>
<td>node-2.local.com</td>
<td></td>
</tr>
<tr>
<td>k8s-node-3</td>
<td>192.168.37.32</td>
<td>node-3</td>
<td>node-3.local.com</td>
<td></td>
</tr>
<tr>
<td>k8s-etcd-1</td>
<td>192.168.37.20</td>
<td>etcd-1</td>
<td>etcd-1.local.com</td>
<td></td>
</tr>
<tr>
<td>k8s-etcd-2</td>
<td>192.168.37.21</td>
<td>etcd-2</td>
<td>etcd-2.local.com</td>
<td>192.168.37.200</td>
</tr>
<tr>
<td>k8s-etcd-3</td>
<td>192.168.37.22</td>
<td>etcd-3</td>
<td>etcd-3.local.com</td>
<td></td>
</tr>
<tr>
<td>k8s-LB-1</td>
<td>192.168.37.40</td>
<td>LB-1</td>
<td>LB-1.local.com</td>
<td></td>
</tr>
<tr>
<td>k8s-LB-2</td>
<td>192.168.37.41</td>
<td>LB-2</td>
<td>LB-2.local.com</td>
<td></td>
</tr>
<tr>
<td>harbor</td>
<td>192.168.37.7</td>
<td>harbor</td>
<td>harbor.local.com</td>
<td></td>
</tr>
</tbody></table>
<h2 id="创建主机秘钥，实现各主机免密登陆"><a href="#创建主机秘钥，实现各主机免密登陆" class="headerlink" title="创建主机秘钥，实现各主机免密登陆"></a>创建主机秘钥，实现各主机免密登陆</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建秘钥</span></span><br><span class="line">root@master-1:~<span class="comment"># ssh-keygen</span></span><br><span class="line"><span class="comment">#执行脚本scp到各个主机</span></span><br><span class="line">root@master-1:/data/script<span class="comment"># cat scp_file.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#目标主机列表</span></span><br><span class="line">IP=<span class="string">"</span></span><br><span class="line"><span class="string">192.168.37.10</span></span><br><span class="line"><span class="string">192.168.37.11</span></span><br><span class="line"><span class="string">192.168.37.12</span></span><br><span class="line"><span class="string">192.168.37.20</span></span><br><span class="line"><span class="string">192.168.37.21</span></span><br><span class="line"><span class="string">192.168.37.22</span></span><br><span class="line"><span class="string">192.168.37.30</span></span><br><span class="line"><span class="string">192.168.37.31</span></span><br><span class="line"><span class="string">192.168.37.32</span></span><br><span class="line"><span class="string">192.168.37.40</span></span><br><span class="line"><span class="string">192.168.37.41</span></span><br><span class="line"><span class="string">192.168.37.7</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> <span class="variable">$&#123;IP&#125;</span>;<span class="keyword">do</span></span><br><span class="line">  sshpass -p root ssh-copy-id <span class="variable">$&#123;node&#125;</span> -o StrictHostKeyChecking=no</span><br><span class="line">  <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;node&#125;</span> 秘钥copy完成"</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;node&#125;</span> 秘钥copy失败"</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment">#随即测试是否成功</span></span><br><span class="line">root@master-1:/data/script<span class="comment"># ssh 192.168.37.7</span></span><br><span class="line">root@harbor:~<span class="comment">#</span></span><br></pre></td></tr></table></figure></div>

<h2 id="配置各个服务器主机hosts解析，如有内网dns可以做域名解析"><a href="#配置各个服务器主机hosts解析，如有内网dns可以做域名解析" class="headerlink" title="配置各个服务器主机hosts解析，如有内网dns可以做域名解析"></a>配置各个服务器主机hosts解析，如有内网dns可以做域名解析</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@master-1:~<span class="comment"># cat /etc/hosts</span></span><br><span class="line">127.0.0.1	localhost</span><br><span class="line">127.0.1.1	ubuntu1804</span><br><span class="line"></span><br><span class="line"><span class="comment"># The following lines are desirable for IPv6 capable hosts</span></span><br><span class="line">::1     localhost ip6-localhost ip6-loopback</span><br><span class="line">ff02::1 ip6-allnodes</span><br><span class="line">ff02::2 ip6-allrouters</span><br><span class="line"></span><br><span class="line">192.168.37.10 master-1 master-1.local.com</span><br><span class="line">192.168.37.11 master-2 master-2.local.com</span><br><span class="line">192.168.37.12 master-3 master-3.local.com</span><br><span class="line">192.168.37.20 etcd-1 etcd-1.local.com</span><br><span class="line">192.168.37.21 etcd-2 etcd-2.local.com</span><br><span class="line">192.168.37.22 etcd-3 etcd-3.local.com</span><br><span class="line">192.168.37.30 node-1 node-1.local.com</span><br><span class="line">192.168.37.31 node-2 node-2.local.com</span><br><span class="line">192.168.37.32 node-3 node-3.local.com</span><br><span class="line">192.168.37.40 LB-1 LB-1.local.com</span><br><span class="line">192.168.37.41 LB-2 LB-2.local.com</span><br><span class="line">192.168.37.7 harbor harbor.local.com</span><br></pre></td></tr></table></figure></div>
<h2 id="将次hosts解析文件拷贝到所有主机，通过脚本执行"><a href="#将次hosts解析文件拷贝到所有主机，通过脚本执行" class="headerlink" title="将次hosts解析文件拷贝到所有主机，通过脚本执行"></a>将次hosts解析文件拷贝到所有主机，通过脚本执行</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@master-1:/data/script<span class="comment"># cat scp_file.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#目标主机列表</span></span><br><span class="line">IP=<span class="string">"</span></span><br><span class="line"><span class="string">192.168.37.10</span></span><br><span class="line"><span class="string">192.168.37.11</span></span><br><span class="line"><span class="string">192.168.37.12</span></span><br><span class="line"><span class="string">192.168.37.20</span></span><br><span class="line"><span class="string">192.168.37.21</span></span><br><span class="line"><span class="string">192.168.37.22</span></span><br><span class="line"><span class="string">192.168.37.30</span></span><br><span class="line"><span class="string">192.168.37.31</span></span><br><span class="line"><span class="string">192.168.37.32</span></span><br><span class="line"><span class="string">192.168.37.40</span></span><br><span class="line"><span class="string">192.168.37.41</span></span><br><span class="line"><span class="string">192.168.37.7</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> <span class="variable">$&#123;IP&#125;</span>;<span class="keyword">do</span></span><br><span class="line"><span class="comment">#拷贝秘钥</span></span><br><span class="line"><span class="comment">#  sshpass -p root ssh-copy-id $&#123;node&#125; -o StrictHostKeyChecking=no</span></span><br><span class="line"><span class="comment">#  if [ $? -eq 0 ];then</span></span><br><span class="line"><span class="comment">#    echo "$&#123;node&#125; 秘钥copy完成"</span></span><br><span class="line"><span class="comment">#  else</span></span><br><span class="line"><span class="comment">#    echo "$&#123;node&#125; 秘钥copy失败"</span></span><br><span class="line"><span class="comment">#  fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#拷贝hosts解析</span></span><br><span class="line">  scp /etc/hosts <span class="variable">$&#123;node&#125;</span>:/etc/hosts</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;node&#125;</span> hosts解析copy完成"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment">#任意ping主机域名测试是否通</span></span><br><span class="line">root@master-1:/data/script<span class="comment"># ping node-1.local.com</span></span><br><span class="line">PING node-1 (192.168.37.30) 56(84) bytes of data.</span><br><span class="line">64 bytes from node-1 (192.168.37.30): icmp_seq=1 ttl=64 time=0.483 ms</span><br><span class="line">^C</span><br><span class="line">--- node-1 ping statistics ---</span><br><span class="line">1 packets transmitted, 1 received, 0% packet loss, time 0ms</span><br><span class="line">rtt min/avg/max/mdev = 0.483/0.483/0.483/0.000 ms</span><br></pre></td></tr></table></figure></div>

<h2 id="配置LB服务器"><a href="#配置LB服务器" class="headerlink" title="配置LB服务器"></a>配置LB服务器</h2><h3 id="配置LB-1"><a href="#配置LB-1" class="headerlink" title="配置LB-1"></a>配置LB-1</h3><ul>
<li>配置haproxy服务<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装haproxy和keepalived</span></span><br><span class="line">apt install keepalived haproxy -y</span><br><span class="line"><span class="comment">#修改keepalived配置文件</span></span><br><span class="line">cp /usr/share/doc/keepalived/samples/keepalived.conf.vrrp /etc/keepalived/</span><br><span class="line"><span class="built_in">cd</span> /etc/keepalived/</span><br><span class="line">mv keepalived.conf.vrrp keepalived.conf</span><br><span class="line">root@LB-1:~<span class="comment"># vim /etc/keepalived/keepalived.conf </span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 192.168.200.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;  <span class="comment">#定义名称与LB-2一致</span></span><br><span class="line">    state MASTER      <span class="comment">#LB-1为主，因此为MASTER</span></span><br><span class="line">    interface eth0</span><br><span class="line">    garp_master_delay 10</span><br><span class="line">    smtp_alert</span><br><span class="line">    virtual_router_id 40  <span class="comment">#（集群的keepalived必须一致）</span></span><br><span class="line">    priority 100     <span class="comment">#master的优先级比backup的数值大，</span></span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.37.100/24 dev eth0 label eth0:1</span><br><span class="line">        192.168.37.101/24 dev eth0 label eth0:2</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#重启keepalived，并开机自启</span></span><br><span class="line">systemctl restart keepalived.service</span><br><span class="line">systemctl <span class="built_in">enable</span> keepalived.service</span><br></pre></td></tr></table></figure></div></li>
<li>配置haproxy服务<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#在haproxy配置文件中添加一下内容</span></span><br><span class="line">root@LB-1:~<span class="comment"># vim /etc/haproxy/haproxy.cfg</span></span><br><span class="line">listen stats</span><br><span class="line">        mode http</span><br><span class="line">        <span class="built_in">bind</span> 0.0.0.0:9999</span><br><span class="line">        stats <span class="built_in">enable</span></span><br><span class="line">        <span class="built_in">log</span> global</span><br><span class="line">        stats uri       /haproxy-status</span><br><span class="line">        stats auth      haadmin:admin</span><br><span class="line"></span><br><span class="line">listen k8s-6443</span><br><span class="line">        <span class="built_in">bind</span> 192.168.37.100:6443</span><br><span class="line">        mode tcp</span><br><span class="line">         balance roundrobin</span><br><span class="line">        server master-1 192.168.37.10:6443 check inter 2s fall 3 rise 5   </span><br><span class="line">        server master-2 192.168.37.11:6443 check inter 2s fall 3 rise 5</span><br><span class="line">        server master-3 192.168.37.12:6443 check inter 2s fall 3 rise 5</span><br><span class="line"><span class="comment">#重启服务并开机自启</span></span><br><span class="line">root@LB-1:~<span class="comment"># systemctl restart haproxy.service</span></span><br><span class="line">root@LB-1:~<span class="comment"># systemctl enable haproxy.service</span></span><br></pre></td></tr></table></figure></div>

</li>
</ul>
<h3 id="配置LB-2"><a href="#配置LB-2" class="headerlink" title="配置LB-2"></a>配置LB-2</h3><ul>
<li>配置keepalived服务<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#从LB-1上把keepalived的配置scp到LB-2</span></span><br><span class="line">scp /etc/keepalived/keepalived.conf 192.168.37.41:/etc/keepalived/</span><br><span class="line"><span class="comment">#修改配置参数</span></span><br><span class="line">root@LB-2:~<span class="comment"># cat /etc/keepalived/keepalived.conf </span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 192.168.200.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;    <span class="comment">#与LB-1一致</span></span><br><span class="line">    state BACKUP        <span class="comment">#改为BACKUP</span></span><br><span class="line">    interface eth0</span><br><span class="line">    garp_master_delay 10</span><br><span class="line">    smtp_alert</span><br><span class="line">    virtual_router_id 40   <span class="comment">#与LB-1保持一致</span></span><br><span class="line">    priority 80            <span class="comment">#优先级数值低于LB-1，</span></span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.37.100/24 dev eth0 label eth0:1</span><br><span class="line">        192.168.37.101/24 dev eth0 label eth0:2</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#重启keepalived，并开机自启</span></span><br><span class="line">systemctl restart keepalived.service</span><br><span class="line">systemctl <span class="built_in">enable</span> keepalived.service</span><br></pre></td></tr></table></figure></div></li>
<li>配置haproxy服务<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#把LB-1的haproxy的配置文件拷贝到LB-2</span></span><br><span class="line">root@LB-1:~<span class="comment"># scp /etc/haproxy/haproxy.cfg root@192.168.37.41:/etc/haproxy/</span></span><br><span class="line"><span class="comment">#重启keepalived，并开机自启</span></span><br><span class="line">systemctl restart keepalived.service</span><br><span class="line">systemctl <span class="built_in">enable</span> keepalived.service</span><br></pre></td></tr></table></figure></div>

</li>
</ul>
<h2 id="部署harbor服务器-基于https协议"><a href="#部署harbor服务器-基于https协议" class="headerlink" title="部署harbor服务器,基于https协议"></a>部署harbor服务器,基于https协议</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#建议物理机，磁盘IO比较大</span></span><br><span class="line"><span class="comment">#ubuntu1804，</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装docker</span></span><br><span class="line">***docker安装脚本***</span><br><span class="line">bash docker-install.sh</span><br><span class="line"><span class="comment"># step 1: 安装必要的一些系统工具</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line"><span class="comment"># step 2: 安装GPG证书</span></span><br><span class="line">curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line"><span class="comment"># Step 3: 写入软件源信息</span></span><br><span class="line">sudo add-apt-repository <span class="string">"deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu <span class="variable">$(lsb_release -cs)</span> stable"</span></span><br><span class="line"><span class="comment"># Step 4: 更新并安装Docker-CE</span></span><br><span class="line">sudo apt-get -y update</span><br><span class="line">***安装脚本***</span><br></pre></td></tr></table></figure></div>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装python2.7，并设置软连接</span></span><br><span class="line">ln -sv /usr/bin/python2.7 /usr/bin/python</span><br><span class="line"><span class="comment">#安装docker-compose</span></span><br><span class="line">apt install docker-compose</span><br><span class="line"><span class="comment">#下载harbor离线包1.7.6</span></span><br><span class="line">https://github.com/goharbor/harbor/releases</span><br><span class="line"><span class="comment">#解压harborbao</span></span><br><span class="line">tar -xvf harbor-offline-installer-v1.7.6.tgz</span><br><span class="line"><span class="built_in">cd</span> harbor</span><br><span class="line"><span class="comment">#修改配置文件中hostname和密码，其他配置参数不动</span></span><br><span class="line">vim harbor.cfg</span><br><span class="line">8 hostname = harbor.local.com</span><br><span class="line">12 ui_url_protocol = https</span><br><span class="line">24 ssl_cert = /usr/<span class="built_in">local</span>/src/harbor/certs/harbor-ca.crt</span><br><span class="line">25 ssl_cert_key = /usr/<span class="built_in">local</span>/src/harbor/certs/harbor-ca.key</span><br><span class="line">69 harbor_admin_password = 123456</span><br></pre></td></tr></table></figure></div>
<ul>
<li>创建证书<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建证书</span></span><br><span class="line">root@harbor:/usr/<span class="built_in">local</span>/src/harbor/certs<span class="comment"># openssl genrsa -out /usr/local/src/harbor/certs/harbor-ca.key</span></span><br><span class="line"><span class="comment">#ubuntu的创建。centos不用，主要记录签发记录</span></span><br><span class="line">root@harbor:/usr/<span class="built_in">local</span>/src/harbor/certs<span class="comment"># touch /root/.rnd</span></span><br><span class="line"><span class="comment">#签发证书</span></span><br><span class="line">root@harbor:/usr/<span class="built_in">local</span>/src/harbor/certs<span class="comment"># openssl req -x509 -new -nodes -key /usr/local/src/harbor/certs/harbor-ca.key -subj "/CN=harbor.local.com" -days 7120 -out /usr/local/src/harbor/certs/harbor-ca.crt</span></span><br></pre></td></tr></table></figure></div></li>
<li>安装harbor<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/harbor</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure></div></li>
<li>web访问<br><a href="https://harbor.local.com" target="_blank" rel="noopener">https://harbor.local.com</a></li>
<li>harbor证书拷贝到需要下载镜像的服务器<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#在各个需要下载镜像的服务器上创建harbor证书存放位置</span></span><br><span class="line">mkdir /etc/docker/certs.d/harbor.local.com -p</span><br><span class="line">scp /usr/<span class="built_in">local</span>/src/harbor/certs/harbor-ca.crt root@192.168.37.10:/etc/docker/certs.d/harbor.local.com</span><br><span class="line"><span class="comment">#重启docker</span></span><br><span class="line">systemctl restart docker</span><br><span class="line"><span class="comment">#测试登陆docker</span></span><br><span class="line">docker login harbor.local.com</span><br></pre></td></tr></table></figure></div></li>
<li>harbor重启及开启命令<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose start</span><br><span class="line">docker-compose stop</span><br></pre></td></tr></table></figure></div>
<h2 id="master-1上安装ansible"><a href="#master-1上安装ansible" class="headerlink" title="master-1上安装ansible"></a>master-1上安装ansible</h2><h3 id="安装ansible服务"><a href="#安装ansible服务" class="headerlink" title="安装ansible服务"></a>安装ansible服务</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装ansible</span></span><br><span class="line">root@master-1:~<span class="comment"># apt install ansible -y</span></span><br></pre></td></tr></table></figure></div>
<h3 id="下载ansible的部署k8s的项目脚本"><a href="#下载ansible的部署k8s的项目脚本" class="headerlink" title="下载ansible的部署k8s的项目脚本"></a>下载ansible的部署k8s的项目脚本</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@master-1:/data/script<span class="comment"># wget https://github.com/easzlab/kubeasz/releases/download/2.2.0/easzup</span></span><br><span class="line">root@master-1:/data/script<span class="comment"># chmod a+x easzup</span></span><br><span class="line"><span class="comment">#安装docker，执行以下脚本</span></span><br><span class="line">***脚本***</span><br><span class="line">root@master-1:/data/script<span class="comment"># cat docker-install.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#step 1: 安装必要的一些系统工具</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line"><span class="comment"># step 2: 安装GPG证书</span></span><br><span class="line">curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line"><span class="comment"># Step 3: 写入软件源信息</span></span><br><span class="line">sudo add-apt-repository <span class="string">"deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu <span class="variable">$(lsb_release -cs)</span> stable"</span></span><br><span class="line"><span class="comment"># Step 4: 更新并安装Docker-CE</span></span><br><span class="line">sudo apt-get -y update</span><br><span class="line">sudo apt-get -y install docker-ce=5:19.03.5~3-0~ubuntu-bionic docker-ce-cli=5:19.03.5~3-0~ubuntu-bionic -y</span><br><span class="line">***脚本***</span><br><span class="line"><span class="comment">#镜像加速</span></span><br><span class="line">略</span><br><span class="line"><span class="comment">#设置开机自启</span></span><br><span class="line">root@master-1:/data/script<span class="comment"># systemctl enable docker</span></span><br><span class="line"><span class="comment">#开始执行</span></span><br><span class="line">root@master-1:/data/script<span class="comment"># ./easzup -D</span></span><br></pre></td></tr></table></figure></div>
<h3 id="修改ansible的host文件"><a href="#修改ansible的host文件" class="headerlink" title="修改ansible的host文件"></a>修改ansible的host文件</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#复制ansible的hosts文件</span></span><br><span class="line">root@master-1:/etc/ansible<span class="comment"># pwd</span></span><br><span class="line">/etc/ansible</span><br><span class="line">root@master-1:/etc/ansible<span class="comment"># cp example/hosts.multi-node ./hosts</span></span><br><span class="line">root@master-1:/etc/ansible<span class="comment"># cat hosts </span></span><br><span class="line"><span class="comment"># 'etcd' cluster should have odd member(s) (1,3,5,...)</span></span><br><span class="line"><span class="comment"># variable 'NODE_NAME' is the distinct name of a member in 'etcd' cluster</span></span><br><span class="line">[etcd]</span><br><span class="line">192.168.37.20 NODE_NAME=etcd1</span><br><span class="line">192.168.37.21 NODE_NAME=etcd2</span><br><span class="line">192.168.37.22 NODE_NAME=etcd3</span><br><span class="line"></span><br><span class="line"><span class="comment"># master node(s)</span></span><br><span class="line">[kube-master]</span><br><span class="line">192.168.37.10</span><br><span class="line">192.168.37.11</span><br><span class="line"></span><br><span class="line"><span class="comment"># work node(s)</span></span><br><span class="line">[kube-node]</span><br><span class="line">192.168.37.30</span><br><span class="line">192.168.37.31</span><br><span class="line"></span><br><span class="line"><span class="comment"># [optional] harbor server, a private docker registry</span></span><br><span class="line"><span class="comment"># 'NEW_INSTALL': 'yes' to install a harbor server; 'no' to integrate with existed one</span></span><br><span class="line"><span class="comment"># 'SELF_SIGNED_CERT': 'no' you need put files of certificates named harbor.pem and harbor-key.pem in directory 'down'</span></span><br><span class="line">[harbor]</span><br><span class="line"><span class="comment">#192.168.1.8 HARBOR_DOMAIN="harbor.yourdomain.com" NEW_INSTALL=no SELF_SIGNED_CERT=yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [optional] loadbalance for accessing k8s from outside</span></span><br><span class="line">[ex-lb]</span><br><span class="line">192.168.37.40 LB_ROLE=master EX_APISERVER_VIP=192.168.37.100 EX_APISERVER_PORT=6443</span><br><span class="line">192.168.37.41 LB_ROLE=backup EX_APISERVER_VIP=192.168.37.100 EX_APISERVER_PORT=6443</span><br><span class="line"></span><br><span class="line"><span class="comment"># [optional] ntp server for the cluster</span></span><br><span class="line">[chrony]</span><br><span class="line"><span class="comment">#192.168.1.1</span></span><br><span class="line"></span><br><span class="line">[all:vars]</span><br><span class="line"><span class="comment"># --------- Main Variables ---------------</span></span><br><span class="line"><span class="comment"># Cluster container-runtime supported: docker, containerd</span></span><br><span class="line">CONTAINER_RUNTIME=<span class="string">"docker"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Network plugins supported: calico, flannel, kube-router, cilium, kube-ovn</span></span><br><span class="line">CLUSTER_NETWORK=<span class="string">"flannel"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Service proxy mode of kube-proxy: 'iptables' or 'ipvs'</span></span><br><span class="line">PROXY_MODE=<span class="string">"iptables"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># K8S Service CIDR, not overlap with node(host) networking</span></span><br><span class="line">SERVICE_CIDR=<span class="string">"10.10.0.0/16"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cluster CIDR (Pod CIDR), not overlap with node(host) networking</span></span><br><span class="line">CLUSTER_CIDR=<span class="string">"172.20.0.0/16"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># NodePort Range</span></span><br><span class="line">NODE_PORT_RANGE=<span class="string">"30000-60000"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cluster DNS Domain</span></span><br><span class="line">CLUSTER_DNS_DOMAIN=<span class="string">"joker.local."</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -------- Additional Variables (don't change the default value right now) ---</span></span><br><span class="line"><span class="comment"># Binaries Directory</span></span><br><span class="line">bin_dir=<span class="string">"/usr/bin"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CA and other components cert/key Directory</span></span><br><span class="line">ca_dir=<span class="string">"/etc/kubernetes/ssl"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deploy Directory (kubeasz workspace)</span></span><br><span class="line">base_dir=<span class="string">"/etc/ansible"</span></span><br></pre></td></tr></table></figure></div>

</li>
</ul>
<h3 id="执行ansible-all-m-ping测试"><a href="#执行ansible-all-m-ping测试" class="headerlink" title="执行ansible all -m ping测试"></a>执行ansible all -m ping测试</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#所有master、etcd及node安装python2.7并设置软连接</span></span><br><span class="line">apt install python2.7 python-pip -y</span><br><span class="line">ln -sv /usr/bin/python2.7 /usr/bin/python</span><br><span class="line"><span class="comment">#测试ansible是否通</span></span><br><span class="line">root@master-1:/etc/ansible<span class="comment"># ansible all -m ping</span></span><br></pre></td></tr></table></figure></div>
<h3 id="执行-etc-ansible-01-prepare-yml-环境初始化"><a href="#执行-etc-ansible-01-prepare-yml-环境初始化" class="headerlink" title="执行/etc/ansible/01.prepare.yml 环境初始化"></a>执行/etc/ansible/01.prepare.yml 环境初始化</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@master-1:/etc/ansible<span class="comment"># cat 01.prepare.yml </span></span><br><span class="line"><span class="comment"># [optional] to synchronize system time of nodes with 'chrony' </span></span><br><span class="line">- hosts:</span><br><span class="line">  - kube-master</span><br><span class="line">  - kube-node</span><br><span class="line">  - etcd</span><br><span class="line"><span class="comment">#  - ex-lb  #无需执行LB服务器（负载均衡，已提前配置好了）</span></span><br><span class="line"><span class="comment">#  - chrony #无需再次时间校准</span></span><br><span class="line">root@master-1:/etc/ansible<span class="comment"># ansible-playbook 01.prepare.yml</span></span><br></pre></td></tr></table></figure></div>

<h3 id="执行-etc-ansible-02-etcd-yml-安装etcd"><a href="#执行-etc-ansible-02-etcd-yml-安装etcd" class="headerlink" title="执行/etc/ansible/02.etcd.yml 安装etcd"></a>执行/etc/ansible/02.etcd.yml 安装etcd</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@master-1:/etc/ansible<span class="comment"># ansible-playbook 02.etcd.yml</span></span><br></pre></td></tr></table></figure></div>

<h3 id="执行-etc-ansible-03-docker-yml-安装docker"><a href="#执行-etc-ansible-03-docker-yml-安装docker" class="headerlink" title="执行/etc/ansible/03.docker.yml 安装docker"></a>执行/etc/ansible/03.docker.yml 安装docker</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@master-1:/etc/ansible<span class="comment"># ansible-playbook 03.docker.yml</span></span><br><span class="line"><span class="comment">#复制harbor证书到master和node节点上，在master-1上执行以下脚本</span></span><br><span class="line">mkdir /etc/docker/certs.d/harbor.local.com</span><br><span class="line">scp /etc/docker/certs.d/harbor.local.com/harbor-ca.crt 192.168.37.10:/etc/docker/certs.d/harbor.local.com/</span><br><span class="line">***脚本***</span><br><span class="line">root@master-1:/data/script<span class="comment"># cat scp-harbor-crt.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#目标主机列表</span></span><br><span class="line">IP=<span class="string">"</span></span><br><span class="line"><span class="string">192.168.37.11</span></span><br><span class="line"><span class="string">192.168.37.12</span></span><br><span class="line"><span class="string">192.168.37.30</span></span><br><span class="line"><span class="string">192.168.37.31</span></span><br><span class="line"><span class="string">192.168.37.32</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> <span class="variable">$&#123;IP&#125;</span>;<span class="keyword">do</span></span><br><span class="line"><span class="comment">#拷贝harbor证书到master和node节点上</span></span><br><span class="line">  ssh <span class="variable">$&#123;node&#125;</span> <span class="string">"mkdir /etc/docker/certs.d/harbor.local.com -p"</span></span><br><span class="line">  scp /etc/docker/certs.d/harbor.local.com/harbor-ca.crt <span class="variable">$&#123;node&#125;</span>:/etc/docker/certs.d/harbor.local.com/harbor-ca.crt</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">***脚本***</span><br></pre></td></tr></table></figure></div>

<h3 id="部署master集群-执行ansible-playbook-04-kube-master-yml"><a href="#部署master集群-执行ansible-playbook-04-kube-master-yml" class="headerlink" title="部署master集群 执行ansible-playbook 04.kube-master.yml"></a>部署master集群 执行ansible-playbook 04.kube-master.yml</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ansible-playbook 04.kube-master.yml</span><br></pre></td></tr></table></figure></div>
<h3 id="部署node节点-执行-ansible-playbook-05-kube-node-yml"><a href="#部署node节点-执行-ansible-playbook-05-kube-node-yml" class="headerlink" title="部署node节点 执行 ansible-playbook 05.kube-node.yml"></a>部署node节点 执行 ansible-playbook 05.kube-node.yml</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#提前下载好master底层镜像并上传到本地harbor上</span></span><br><span class="line">root@master-1:~<span class="comment"># docker pull mirrorgooglecontainers/pause-amd64:3.1</span></span><br><span class="line">root@master-1:~<span class="comment"># docker tag mirrorgooglecontainers/pause-amd64:3.1 harbor.local.com/test/pause-amd64:3.1</span></span><br><span class="line">root@master-1:~<span class="comment"># docker push harbor.local.com/test/pause-amd64:3.1</span></span><br><span class="line"><span class="comment">#修改ansible-playbook文件，改为本地镜像</span></span><br><span class="line">root@master-1:/etc/ansible<span class="comment"># vim roles/kube-node/defaults/main.yml</span></span><br><span class="line">7 SANDBOX_IMAGE: <span class="string">"harbor.local.com/test/pause-amd64:3.1"</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>执行ansible-playbook 05.kube-node.yml<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ansible-playbook 05.kube-node.yml</span><br><span class="line"><span class="comment">#查看node节点是否添加成功</span></span><br><span class="line">root@master-1:/etc/ansible<span class="comment"># kubectl get node</span></span><br><span class="line">NAME            STATUS                     ROLES    AGE     VERSION</span><br><span class="line">192.168.37.10   Ready,SchedulingDisabled   master   15m     v1.17.2</span><br><span class="line">192.168.37.11   Ready,SchedulingDisabled   master   15m     v1.17.2</span><br><span class="line">192.168.37.30   Ready                      node     2m35s   v1.17.2</span><br><span class="line">192.168.37.31   Ready                      node     2m35s   v1.17.2</span><br></pre></td></tr></table></figure></div>
<h3 id="安装网络组件flannel-执行ansible-playbook-06-network-yml"><a href="#安装网络组件flannel-执行ansible-playbook-06-network-yml" class="headerlink" title="安装网络组件flannel 执行ansible-playbook 06.network.yml"></a>安装网络组件flannel 执行ansible-playbook 06.network.yml</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@master-1:/etc/ansible<span class="comment"># ansible-playbook 06.network.yml</span></span><br><span class="line"><span class="comment">#创建pod，测试各个node是否可通</span></span><br><span class="line">kubectl run net-test1 --image=alpine --replicas=4 sleep 360000</span><br><span class="line"><span class="comment">#查看pod</span></span><br><span class="line">kubectl get pod -o wide</span><br><span class="line"><span class="comment">#进入pod</span></span><br><span class="line">kebectl <span class="built_in">exec</span> -it net-test1-XXXXX sh</span><br><span class="line">ping ip地址 <span class="comment"># 因无dns，无法ping域名</span></span><br></pre></td></tr></table></figure></div>

</li>
</ul>
<h3 id="添加master到集群"><a href="#添加master到集群" class="headerlink" title="添加master到集群"></a>添加master到集群</h3><ul>
<li>要求<ul>
<li>时间同步</li>
<li>配置免秘钥登陆<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#find添加master脚本</span></span><br><span class="line">root@master-1:/data/script<span class="comment"># find / -name easzctl</span></span><br><span class="line">/etc/ansible/tools/easzctl</span><br><span class="line">root@master-1:/etc/ansible/tools<span class="comment"># easzctl add-master 192.168.37.12</span></span><br></pre></td></tr></table></figure></div>
<h3 id="添加node节点"><a href="#添加node节点" class="headerlink" title="添加node节点"></a>添加node节点</h3></li>
</ul>
</li>
<li>要求<ul>
<li>时间同步</li>
<li>配置免秘钥登陆<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#find添加master脚本</span></span><br><span class="line">root@master-1:/data/script<span class="comment"># find / -name easzctl</span></span><br><span class="line">/etc/ansible/tools/easzctl</span><br><span class="line">root@master-1:/etc/ansible/tools<span class="comment"># easzctl add-node 192.168.37.32</span></span><br></pre></td></tr></table></figure></div>

</li>
</ul>
</li>
</ul>
<h3 id="版本升级1-17-2升级到1-17-4"><a href="#版本升级1-17-2升级到1-17-4" class="headerlink" title="版本升级1.17.2升级到1.17.4"></a>版本升级1.17.2升级到1.17.4</h3><ul>
<li>下载要升级的k8s版本，不要跨大版本号<br>  <a href="https://github.com/kubernetes/kubernetes/releases/tag/v1.17.4" target="_blank" rel="noopener">https://github.com/kubernetes/kubernetes/releases/tag/v1.17.4</a><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#拷贝原来k8s的二进制文件</span></span><br><span class="line">mkdir -pv /data/k8s-v1.17.2</span><br><span class="line"><span class="built_in">cd</span> /etc/ansible/bin/</span><br><span class="line">cp kube-apiserver kube-controller-manager kubectl kubelet kube-proxy kube-scheduler /data/k8s-v1.17.2/</span><br><span class="line"><span class="comment">#解压下载的k8s-v1.17.4</span></span><br><span class="line">mkdir /data/k8s-v1.17.4</span><br><span class="line">tar xvf kubernetes-server-linux-amd64.tar.gz</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/kubernetes/server/bin</span><br><span class="line">cp kube-apiserver kube-controller-manager kubectl kubelet kube-proxy kube-scheduler /data/k8s-v1.17.4/</span><br><span class="line">***脚本升级***</span><br><span class="line">cp /data/k8s-v1.17.4/* /etc/ansible/bin/</span><br><span class="line"><span class="comment">#执行脚本升级</span></span><br><span class="line">easzctl upgrade</span><br><span class="line"></span><br><span class="line">***手动升级***</span><br><span class="line"><span class="comment">#停止k8s-master服务拷贝二进制文件</span></span><br><span class="line">systemctl stop kube-apiserver kube-controller-manager kubelet kube-proxy kube-scheduler</span><br><span class="line"><span class="comment">#停止k8s-node服务拷贝二进制文件</span></span><br><span class="line">systemctl stop kubelet kube-proxy </span><br><span class="line"><span class="comment">#直接把配置文件拷贝到相应master或者node节点/usr/bin/目录下</span></span><br><span class="line">***手动升级***</span><br></pre></td></tr></table></figure></div>

</li>
</ul>
<h3 id="部署dashboard的web界面"><a href="#部署dashboard的web界面" class="headerlink" title="部署dashboard的web界面"></a>部署dashboard的web界面</h3><ul>
<li>配置kubernetes-dashboard.yaml<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#提前下载镜像</span></span><br><span class="line">docker pull kubernetesui/dashboard:v2.0.0-rc6</span><br><span class="line">docker pull kubernetesui/metrics-scraper:v1.0.3</span><br><span class="line"><span class="comment">#上传镜像至本地harbor</span></span><br><span class="line">docker tag kubernetesui/dashboard:v2.0.0-rc6 192.168.37.7/<span class="built_in">test</span>/dashboard:v2.0.0-rc6</span><br><span class="line">docker push 192.168.37.7/<span class="built_in">test</span>/dashboard:v2.0.0-rc6</span><br><span class="line">docker tag kubernetesui/metrics-scraper:v1.0.3 192.168.37.7/<span class="built_in">test</span>/metrics-scraper:v1.0.3</span><br><span class="line">docker push 192.168.37.7/<span class="built_in">test</span>/metrics-scraper:v1.0.3</span><br><span class="line"><span class="comment">#修改kubernetes-dashboard.yaml文件中的镜像</span></span><br><span class="line"><span class="comment">#主要修改2处镜像地址，监听服务端口，token的有限期。增长web界面时间</span></span><br><span class="line">root@master-1:/etc/ansible/manifests/dashboard/2.0.6<span class="comment"># cat kubernetes-dashboard.yaml </span></span><br><span class="line"><span class="comment"># Copyright 2017 The Kubernetes Authors.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-system </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kube-system</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">    kubernetes.io/cluster-service: <span class="string">"true"</span></span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - port: 443</span><br><span class="line">      targetPort: 8443</span><br><span class="line">      nodePort： 30002</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-certs</span><br><span class="line">  namespace: kube-system</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-csrf</span><br><span class="line">  namespace: kube-system</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br><span class="line">data:</span><br><span class="line">  csrf: <span class="string">""</span></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-key-holder</span><br><span class="line">  namespace: kube-system</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: ConfigMap</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-settings</span><br><span class="line">  namespace: kube-system</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Role</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kube-system</span><br><span class="line">rules:</span><br><span class="line">  <span class="comment"># Allow Dashboard to get, update and delete Dashboard exclusive secrets.</span></span><br><span class="line">  - apiGroups: [<span class="string">""</span>]</span><br><span class="line">    resources: [<span class="string">"secrets"</span>]</span><br><span class="line">    resourceNames: [<span class="string">"kubernetes-dashboard-key-holder"</span>, <span class="string">"kubernetes-dashboard-certs"</span>, <span class="string">"kubernetes-dashboard-csrf"</span>]</span><br><span class="line">    verbs: [<span class="string">"get"</span>, <span class="string">"update"</span>, <span class="string">"delete"</span>]</span><br><span class="line">    <span class="comment"># Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.</span></span><br><span class="line">  - apiGroups: [<span class="string">""</span>]</span><br><span class="line">    resources: [<span class="string">"configmaps"</span>]</span><br><span class="line">    resourceNames: [<span class="string">"kubernetes-dashboard-settings"</span>]</span><br><span class="line">    verbs: [<span class="string">"get"</span>, <span class="string">"update"</span>]</span><br><span class="line">    <span class="comment"># Allow Dashboard to get metrics.</span></span><br><span class="line">  - apiGroups: [<span class="string">""</span>]</span><br><span class="line">    resources: [<span class="string">"services"</span>]</span><br><span class="line">    resourceNames: [<span class="string">"heapster"</span>, <span class="string">"dashboard-metrics-scraper"</span>]</span><br><span class="line">    verbs: [<span class="string">"proxy"</span>]</span><br><span class="line">  - apiGroups: [<span class="string">""</span>]</span><br><span class="line">    resources: [<span class="string">"services/proxy"</span>]</span><br><span class="line">    resourceNames: [<span class="string">"heapster"</span>, <span class="string">"http:heapster:"</span>, <span class="string">"https:heapster:"</span>, <span class="string">"dashboard-metrics-scraper"</span>, <span class="string">"http:dashboard-metrics-scraper"</span>]</span><br><span class="line">    verbs: [<span class="string">"get"</span>]</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: ClusterRole</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">rules:</span><br><span class="line">  <span class="comment"># Allow Metrics Scraper to get metrics from the Metrics server</span></span><br><span class="line">  - apiGroups: [<span class="string">"metrics.k8s.io"</span>]</span><br><span class="line">    resources: [<span class="string">"pods"</span>, <span class="string">"nodes"</span>]</span><br><span class="line">    verbs: [<span class="string">"get"</span>, <span class="string">"list"</span>, <span class="string">"watch"</span>]</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: RoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kube-system</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: Role</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: kubernetes-dashboard</span><br><span class="line">    namespace: kube-system</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: kubernetes-dashboard</span><br><span class="line">    namespace: kube-system</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Deployment</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  revisionHistoryLimit: 10</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kubernetes-dashboard</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: kubernetes-dashboard</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: kubernetes-dashboard</span><br><span class="line">          <span class="comment"># image: kubernetesui/dashboard:v2.0.0-rc3</span></span><br><span class="line">          image: harbor.local.com/<span class="built_in">test</span>/dashboard:v2.0.0-rc6 <span class="comment">#修改本地镜像地址</span></span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 8443</span><br><span class="line">              protocol: TCP</span><br><span class="line">          args:</span><br><span class="line">            - --auto-generate-certificates</span><br><span class="line">            - --namespace=kube-system</span><br><span class="line">            - --token-ttl=3600     <span class="comment">#单位s</span></span><br><span class="line">            <span class="comment"># Uncomment the following line to manually specify Kubernetes API server Host</span></span><br><span class="line">            <span class="comment"># If not specified, Dashboard will attempt to auto discover the API server and connect</span></span><br><span class="line">            <span class="comment"># to it. Uncomment only if the default does not work.</span></span><br><span class="line">            <span class="comment"># - --apiserver-host=http://my-address:port</span></span><br><span class="line">          volumeMounts:</span><br><span class="line">            - name: kubernetes-dashboard-certs</span><br><span class="line">              mountPath: /certs</span><br><span class="line">              <span class="comment"># Create on-disk volume to store exec logs</span></span><br><span class="line">            - mountPath: /tmp</span><br><span class="line">              name: tmp-volume</span><br><span class="line">          livenessProbe:</span><br><span class="line">            httpGet:</span><br><span class="line">              scheme: HTTPS</span><br><span class="line">              path: /</span><br><span class="line">              port: 8443</span><br><span class="line">            initialDelaySeconds: 30</span><br><span class="line">            timeoutSeconds: 30</span><br><span class="line">          securityContext:</span><br><span class="line">            allowPrivilegeEscalation: <span class="literal">false</span></span><br><span class="line">            readOnlyRootFilesystem: <span class="literal">true</span></span><br><span class="line">            runAsUser: 1001</span><br><span class="line">            runAsGroup: 2001</span><br><span class="line">      volumes:</span><br><span class="line">        - name: kubernetes-dashboard-certs</span><br><span class="line">          secret:</span><br><span class="line">            secretName: kubernetes-dashboard-certs</span><br><span class="line">        - name: tmp-volume</span><br><span class="line">          emptyDir: &#123;&#125;</span><br><span class="line">      serviceAccountName: kubernetes-dashboard</span><br><span class="line">      nodeSelector:</span><br><span class="line">        <span class="string">"beta.kubernetes.io/os"</span>: linux</span><br><span class="line">      <span class="comment"># Comment the following tolerations if Dashboard must not be deployed on master</span></span><br><span class="line">      tolerations:</span><br><span class="line">        - key: node-role.kubernetes.io/master</span><br><span class="line">          effect: NoSchedule</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: dashboard-metrics-scraper</span><br><span class="line">  name: dashboard-metrics-scraper</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - port: 8000</span><br><span class="line">      targetPort: 8000</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: dashboard-metrics-scraper</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Deployment</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: dashboard-metrics-scraper</span><br><span class="line">  name: dashboard-metrics-scraper</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  revisionHistoryLimit: 10</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: dashboard-metrics-scraper</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: dashboard-metrics-scraper</span><br><span class="line">      annotations:</span><br><span class="line">        seccomp.security.alpha.kubernetes.io/pod: <span class="string">'runtime/default'</span></span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: dashboard-metrics-scraper</span><br><span class="line">          <span class="comment"># image: kubernetesui/metrics-scraper:v1.0.3</span></span><br><span class="line">          image: harbor.local.com/<span class="built_in">test</span>/metrics-scraper:v1.0.3 <span class="comment">#修改本地镜像地址</span></span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 8000</span><br><span class="line">              protocol: TCP</span><br><span class="line">          livenessProbe:</span><br><span class="line">            httpGet:</span><br><span class="line">              scheme: HTTP</span><br><span class="line">              path: /</span><br><span class="line">              port: 8000</span><br><span class="line">            initialDelaySeconds: 30</span><br><span class="line">            timeoutSeconds: 30</span><br><span class="line">          volumeMounts:</span><br><span class="line">          - mountPath: /tmp</span><br><span class="line">            name: tmp-volume</span><br><span class="line">          securityContext:</span><br><span class="line">            allowPrivilegeEscalation: <span class="literal">false</span></span><br><span class="line">            readOnlyRootFilesystem: <span class="literal">true</span></span><br><span class="line">            runAsUser: 1001</span><br><span class="line">            runAsGroup: 2001</span><br><span class="line">      serviceAccountName: kubernetes-dashboard</span><br><span class="line">      nodeSelector:</span><br><span class="line">        <span class="string">"beta.kubernetes.io/os"</span>: linux</span><br><span class="line">      <span class="comment"># Comment the following tolerations if Dashboard must not be deployed on master</span></span><br><span class="line">      tolerations:</span><br><span class="line">        - key: node-role.kubernetes.io/master</span><br><span class="line">          effect: NoSchedule</span><br><span class="line">      volumes:</span><br><span class="line">        - name: tmp-volume</span><br><span class="line">          emptyDir: &#123;&#125;</span><br></pre></td></tr></table></figure></div></li>
<li>写adminuser.yml<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#写adminuser.yml</span></span><br><span class="line">root@master-1:/usr/<span class="built_in">local</span>/src<span class="comment"># cat admin-user.yml </span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-user</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-user</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: admin-user</span><br><span class="line">  namespace: kubernetes-dashboard</span><br></pre></td></tr></table></figure></div></li>
<li>分别执行yaml文件 <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 执行dashboash和admin-user的yml文件</span></span><br><span class="line">root@master-1:/usr/<span class="built_in">local</span>/src<span class="comment"># kubectl apply -f kubernetes-dashboard.yaml</span></span><br><span class="line">root@master-1:/usr/<span class="built_in">local</span>/src<span class="comment"># kubectl apply -f admin-user.yml</span></span><br></pre></td></tr></table></figure></div></li>
<li>登陆使用协议https<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取dashboard服务端口</span></span><br><span class="line">root@master-1:/etc/ansible/manifests/dashboard/2.0.6<span class="comment"># kubectl get svc -A</span></span><br><span class="line">NAMESPACE     NAME                        TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)         AGE</span><br><span class="line">default       kubernetes                  ClusterIP   10.10.0.1       &lt;none&gt;        443/TCP         4h49m</span><br><span class="line">kube-system   dashboard-metrics-scraper   ClusterIP   10.10.57.75     &lt;none&gt;        8000/TCP        4m59s</span><br><span class="line">kube-system   kubernetes-dashboard        NodePort    10.10.240.110   &lt;none&gt;        443:30002/TCP   4m59s</span><br><span class="line"><span class="comment">#是否运行</span></span><br><span class="line">kubectl get pod -A</span><br><span class="line"><span class="comment">#可以在使用任意node节点的IP地址登陆</span></span><br><span class="line">https://192.168.37.30:30002 </span><br><span class="line"><span class="comment">#获取token值进行登陆，复制token值到web界面进行登陆</span></span><br><span class="line">root@master-1:/etc/ansible/manifests/dashboard/2.0.6<span class="comment"># kubectl get secrets -A | grep admin</span></span><br><span class="line">kube-system            admin-user-token-kp9bb                           kubernetes.io/service-account-token   3      24m</span><br><span class="line">root@master-1:/etc/ansible/manifests/dashboard/2.0.6<span class="comment"># kubectl describe secrets admin-user-token-kp9bb -n kube-system</span></span><br><span class="line">Name:         admin-user-token-kp9bb</span><br><span class="line">Namespace:    kube-system</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  kubernetes.io/service-account.name: admin-user</span><br><span class="line">              kubernetes.io/service-account.uid: ba55484e-405a-45a8-86bc-550ff4d67ad4</span><br><span class="line"></span><br><span class="line">Type:  kubernetes.io/service-account-token</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">ca.crt:     1350 bytes</span><br><span class="line">namespace:  11 bytes</span><br><span class="line">token:      eyJhbGciOiJSUzI1NiIsImtpZCI6ImROaEg5c3BFaHBMdk1kV3JRSnpnS09fQmg3SkF3Yk5OeU44UG5ZTWFPaHMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLWtwOWJiIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJiYTU1NDg0ZS00MDVhLTQ1YTgtODZiYy01NTBmZjRkNjdhZDQiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06YWRtaW4tdXNlciJ9.BEgIdaFIpGF1f8OEsM0DDnYuNHQaknLYy3Q4kugrZFxrOqtVHqgMwX9poLssN9U_XHHpoBy9Ok-pp3RPDc5GYB_gLjdAjzrWbSruRPkcnSXHi09EVJ6ux6NfDr3lGeO0ZmNUTTIcG048YtYet7hkcwUeL-F2urYpFeS7bC7UDVT6BHvk5Iuo04on5reU9OmffVroTNM1ZWUCr6YBXZH0ETl-pq127qnehJS-hdSdD2GA2IJ7o19YmSIZ84ivoxkBOko8EdOGnMKGNVXNJTlFlDgxz8lJH0nAquG6RTt59iRwt1-UCgvFFSXDG2bZOUScuR703Kv3gSC_IfDYxZ81DA</span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure></div>

</li>
</ul>
<h3 id="dns部署"><a href="#dns部署" class="headerlink" title="dns部署"></a>dns部署</h3><ul>
<li>查看pod中容器dns指向的地址<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@master-1:/etc/ansible/manifests/dns<span class="comment"># kubectl exec -it net-test2-8456fd74f7-p9qxc sh</span></span><br><span class="line">/ <span class="comment"># cat /etc/resolv.conf </span></span><br><span class="line">nameserver 10.10.0.2</span><br><span class="line">search default.svc.joker.local. svc.joker.local. joker.local.</span><br><span class="line">options ndots:5</span><br></pre></td></tr></table></figure></div>
<h4 id="kube-dns部署"><a href="#kube-dns部署" class="headerlink" title="kube-dns部署"></a>kube-dns部署</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#需科学inter--下载镜像https://console.cloud.google.com/gcr/images/google-containers/GLOBAL</span></span><br><span class="line">docker pull gcr.io/google-containers/k8s-dns-kube-dns-amd64:1.15.11</span><br><span class="line"><span class="comment">#找kube-dns的yml文件</span></span><br><span class="line">root@master-1:/usr/<span class="built_in">local</span>/src<span class="comment"># ll</span></span><br><span class="line">total 458240</span><br><span class="line">drwxr-xr-x  4 root root      4096 Apr  6 22:58 ./</span><br><span class="line">drwxr-xr-x 10 root root      4096 Apr  3 06:24 ../</span><br><span class="line">drwxr-xr-x  2 root root      4096 Apr  6 21:16 k8s-v1.17.2/</span><br><span class="line">drwxr-xr-x  2 root root      4096 Apr  6 21:20 k8s-v1.17.4/</span><br><span class="line">-rw-r--r--  1 root root  13105487 Apr  6 21:11 kubernetes-client-linux-amd64.tar.gz</span><br><span class="line">-rw-r--r--  1 root root  96338064 Apr  6 21:11 kubernetes-node-linux-amd64.tar.gz</span><br><span class="line">-rw-r--r--  1 root root 359299390 Apr  6 21:11 kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">-rw-r--r--  1 root root    462528 Apr  6 21:11 kubernetes.tar.gz</span><br><span class="line">root@master-1:/usr/<span class="built_in">local</span>/src<span class="comment"># tar xf kubernetes-client-linux-amd64.tar.gz</span></span><br><span class="line">root@master-1:/usr/<span class="built_in">local</span>/src<span class="comment"># tar xf kubernetes-node-linux-amd64.tar.gz</span></span><br><span class="line">root@master-1:/usr/<span class="built_in">local</span>/src<span class="comment"># tar xf kubernetes-server-linux-amd64.tar.gz</span></span><br><span class="line">root@master-1:/usr/<span class="built_in">local</span>/src<span class="comment"># tar xf kubernetes.tar.gz</span></span><br><span class="line">root@master-1:/usr/<span class="built_in">local</span>/src/kubernetes/cluster/addons/dns/kube-dns<span class="comment"># pwd</span></span><br><span class="line">/usr/<span class="built_in">local</span>/src/kubernetes/cluster/addons/dns/kube-dns</span><br><span class="line"><span class="comment">#主要修改及修改cpu和内存限制kube-dns、masqdns大一点，sidecar小一点</span></span><br><span class="line">33  clusterIP: 10.10.0.2</span><br><span class="line">112             memory: 512Mi</span><br><span class="line">106         image: harbor.local.com/<span class="built_in">test</span>/k8s-dns-kube-dns-amd64:1.14.13</span><br><span class="line">135         - --domain=joker.local.</span><br><span class="line">163          image: harbor.local.com/<span class="built_in">test</span>/k8s-dns-dnsmasq-nanny-amd64:1.14.13</span><br><span class="line">182         - --server=/joker.local/127.0.0.1<span class="comment">#10053 #此位置可以配置公司内部域名解析，第一是域名，第二是dns服务器地址</span></span><br><span class="line">221         - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.joker.local,5,SRV</span><br><span class="line">222         - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.joker.local,5,SRV</span><br><span class="line">211         image: harbor.local.com/<span class="built_in">test</span>/k8s-dns-sidecar-amd64:1.14.13</span><br></pre></td></tr></table></figure></div></li>
<li>逐个导入需要的3个镜像</li>
</ul>
<ol>
<li>导入k8s-dns-kube-dns-amd64_1.14.13.tar.gz<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker load -i k8s-dns-kube-dns-amd64_1.14.13.tar.gz</span><br><span class="line">docker images</span><br><span class="line">docker tag gcr.io/google-containers/k8s-dns-kube-dns-amd64:1.14.13 harbor.local.com/<span class="built_in">test</span>/k8s-dns-kube-dns-amd64:1.14.13</span><br><span class="line">docker push harbor.local.com/<span class="built_in">test</span>/k8s-dns-kube-dns-amd64:1.14.13</span><br></pre></td></tr></table></figure></div></li>
<li>导入k8s-dns-dnsmasq-nanny-amd64_1.14.13.tar.gz<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker load -i k8s-dns-dnsmasq-nanny-amd64_1.14.13.tar.gz</span><br><span class="line">docker images</span><br><span class="line">docker tag gcr.io/google-containers/k8s-dns-dnsmasq-nanny-amd64:1.14.13 harbor.local.com/<span class="built_in">test</span>/k8s-dns-dnsmasq-nanny-amd64:1.14.13</span><br><span class="line">docker push harbor.local.com/<span class="built_in">test</span>/k8s-dns-dnsmasq-nanny-amd64:1.14.13</span><br></pre></td></tr></table></figure></div></li>
<li>导入k8s-dns-sidecar-amd64:1.14.13 状态监控<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker load -i k8s-dns-sidecar-amd64_1.14.13.tar.gz</span><br><span class="line">docker images</span><br><span class="line">docker tag gcr.io/google-containers/k8s-dns-sidecar-amd64:1.14.13 harbor.local.com/<span class="built_in">test</span>/k8s-dns-sidecar-amd64:1.14.13</span><br><span class="line">docker push harbor.local.com/<span class="built_in">test</span>/k8s-dns-sidecar-amd64:1.14.13</span><br></pre></td></tr></table></figure></div></li>
</ol>
<ul>
<li>具体kube-dns配置文件如下<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@master-1:/etc/ansible/manifests/dns<span class="comment"># cat kube-dns-joker.yaml </span></span><br><span class="line"><span class="comment"># Copyright 2016 The Kubernetes Authors.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Should keep target in cluster/addons/dns-horizontal-autoscaler/dns-horizontal-autoscaler.yaml</span></span><br><span class="line"><span class="comment"># in sync with this file.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># __MACHINE_GENERATED_WARNING__</span></span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-dns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-dns</span><br><span class="line">    kubernetes.io/cluster-service: <span class="string">"true"</span></span><br><span class="line">    addonmanager.kubernetes.io/mode: Reconcile</span><br><span class="line">    kubernetes.io/name: <span class="string">"KubeDNS"</span></span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kube-dns</span><br><span class="line">  clusterIP: 10.10.0.2</span><br><span class="line">  ports:</span><br><span class="line">  - name: dns</span><br><span class="line">    port: 53</span><br><span class="line">    protocol: UDP</span><br><span class="line">  - name: dns-tcp</span><br><span class="line">    port: 53</span><br><span class="line">    protocol: TCP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-dns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/cluster-service: <span class="string">"true"</span></span><br><span class="line">    addonmanager.kubernetes.io/mode: Reconcile</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-dns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    addonmanager.kubernetes.io/mode: EnsureExists</span><br><span class="line">---</span><br><span class="line"><span class="comment">#apiVersion: extensions/v1beta1</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-dns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-dns</span><br><span class="line">    kubernetes.io/cluster-service: <span class="string">"true"</span></span><br><span class="line">    addonmanager.kubernetes.io/mode: Reconcile</span><br><span class="line">spec:</span><br><span class="line">  <span class="comment"># replicas: not specified here:</span></span><br><span class="line">  <span class="comment"># 1. In order to make Addon Manager do not reconcile this replicas parameter.</span></span><br><span class="line">  <span class="comment"># 2. Default is 1.</span></span><br><span class="line">  <span class="comment"># 3. Will be tuned in real time if DNS horizontal auto-scaling is turned on.</span></span><br><span class="line">  strategy:</span><br><span class="line">    rollingUpdate:</span><br><span class="line">      maxSurge: 10%</span><br><span class="line">      maxUnavailable: 0</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kube-dns</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: kube-dns</span><br><span class="line">      annotations:</span><br><span class="line">        scheduler.alpha.kubernetes.io/critical-pod: <span class="string">''</span></span><br><span class="line">        seccomp.security.alpha.kubernetes.io/pod: <span class="string">'docker/default'</span></span><br><span class="line">    spec:</span><br><span class="line">      priorityClassName: system-cluster-critical</span><br><span class="line">      securityContext:</span><br><span class="line">        supplementalGroups: [ 65534 ]</span><br><span class="line">        fsGroup: 65534</span><br><span class="line">      tolerations:</span><br><span class="line">      - key: <span class="string">"CriticalAddonsOnly"</span></span><br><span class="line">        operator: <span class="string">"Exists"</span></span><br><span class="line">      volumes:</span><br><span class="line">      - name: kube-dns-config</span><br><span class="line">        configMap:</span><br><span class="line">          name: kube-dns</span><br><span class="line">          optional: <span class="literal">true</span></span><br><span class="line">      containers:</span><br><span class="line">      - name: kubedns </span><br><span class="line">        image: harbor.local.com/<span class="built_in">test</span>/k8s-dns-kube-dns-amd64:1.14.13</span><br><span class="line">        resources:</span><br><span class="line">          <span class="comment"># <span class="doctag">TODO:</span> Set memory limits when we've profiled the container for large</span></span><br><span class="line">          <span class="comment"># clusters, then set request = limit to keep this container in</span></span><br><span class="line">          <span class="comment"># guaranteed class. Currently, this container falls into the</span></span><br><span class="line">          <span class="comment"># "burstable" category so the kubelet doesn't backoff from restarting it.</span></span><br><span class="line">          limits:</span><br><span class="line">            memory: 170Mi</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 100m</span><br><span class="line">            memory: 70Mi</span><br><span class="line">        livenessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /healthcheck/kubedns</span><br><span class="line">            port: 10054</span><br><span class="line">            scheme: HTTP</span><br><span class="line">          initialDelaySeconds: 60</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          failureThreshold: 5</span><br><span class="line">        readinessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /readiness</span><br><span class="line">            port: 8081</span><br><span class="line">            scheme: HTTP</span><br><span class="line">          <span class="comment"># we poll on pod startup for the Kubernetes master service and</span></span><br><span class="line">          <span class="comment"># only setup the /readiness HTTP server once that's available.</span></span><br><span class="line">          initialDelaySeconds: 3</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">        args:</span><br><span class="line">        - --domain=joker.local</span><br><span class="line">        - --dns-port=10053</span><br><span class="line">        - --config-dir=/kube-dns-config</span><br><span class="line">        - --v=2</span><br><span class="line">        env:</span><br><span class="line">        - name: PROMETHEUS_PORT</span><br><span class="line">          value: <span class="string">"10055"</span></span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 10053</span><br><span class="line">          name: dns-local</span><br><span class="line">          protocol: UDP</span><br><span class="line">        - containerPort: 10053</span><br><span class="line">          name: dns-tcp-local</span><br><span class="line">          protocol: TCP</span><br><span class="line">        - containerPort: 10055</span><br><span class="line">          name: metrics</span><br><span class="line">          protocol: TCP</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: kube-dns-config</span><br><span class="line">          mountPath: /kube-dns-config</span><br><span class="line">      - name: dnsmasq </span><br><span class="line">        image: harbor.local.com/<span class="built_in">test</span>/k8s-dns-dnsmasq-nanny-amd64:1.14.13</span><br><span class="line">        livenessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /healthcheck/dnsmasq</span><br><span class="line">            port: 10054</span><br><span class="line">            scheme: HTTP</span><br><span class="line">          initialDelaySeconds: 60</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          failureThreshold: 5</span><br><span class="line">        args:</span><br><span class="line">        - -v=2</span><br><span class="line">        - -logtostderr</span><br><span class="line">        - -configDir=/etc/k8s/dns/dnsmasq-nanny</span><br><span class="line">        - -restartDnsmasq=<span class="literal">true</span></span><br><span class="line">        - --</span><br><span class="line">        - -k</span><br><span class="line">        - --cache-size=1000</span><br><span class="line">        - --no-negcache</span><br><span class="line">        - --dns-loop-detect</span><br><span class="line">        - --<span class="built_in">log</span>-facility=-</span><br><span class="line">        - --server=/joker.local/127.0.0.1<span class="comment">#10053</span></span><br><span class="line">        - --server=/<span class="keyword">in</span>-addr.arpa/127.0.0.1<span class="comment">#10053</span></span><br><span class="line">        - --server=/ip6.arpa/127.0.0.1<span class="comment">#10053</span></span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 53</span><br><span class="line">          name: dns</span><br><span class="line">          protocol: UDP</span><br><span class="line">        - containerPort: 53</span><br><span class="line">          name: dns-tcp</span><br><span class="line">          protocol: TCP</span><br><span class="line">        <span class="comment"># see: https://github.com/kubernetes/kubernetes/issues/29055 for details</span></span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 150m</span><br><span class="line">            memory: 20Mi</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: kube-dns-config</span><br><span class="line">          mountPath: /etc/k8s/dns/dnsmasq-nanny</span><br><span class="line">      - name: sidecar</span><br><span class="line">        image: harbor.local.com/<span class="built_in">test</span>/k8s-dns-sidecar-amd64:1.14.13</span><br><span class="line">        livenessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /metrics</span><br><span class="line">            port: 10054</span><br><span class="line">            scheme: HTTP</span><br><span class="line">          initialDelaySeconds: 60</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          failureThreshold: 5</span><br><span class="line">        args:</span><br><span class="line">        - --v=2</span><br><span class="line">        - --logtostderr</span><br><span class="line">        - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.joker.local,5,SRV</span><br><span class="line">        - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.joker.local,5,SRV</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 10054</span><br><span class="line">          name: metrics</span><br><span class="line">          protocol: TCP</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            memory: 20Mi</span><br><span class="line">            cpu: 10m</span><br><span class="line">      dnsPolicy: Default  <span class="comment"># Don't use cluster DNS.</span></span><br><span class="line">      serviceAccountName: kube-dns</span><br></pre></td></tr></table></figure></div>

</li>
</ul>
<h4 id="core-dns部署"><a href="#core-dns部署" class="headerlink" title="core-dns部署"></a>core-dns部署</h4><ul>
<li>在/etc/ansible/roles/cluster-addon/templates/有模板<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@master-1:/etc/ansible<span class="comment"># find roles/ -name core*</span></span><br><span class="line">roles/cluster-addon/templates/coredns.yaml.j2</span><br><span class="line">root@master-1:/etc/ansible<span class="comment"># cp roles/cluster-addon/templates/coredns.yaml.j2 manifests/dns/</span></span><br><span class="line">root@master-1:/etc/ansible/manifests/dns<span class="comment"># mv coredns.yaml.j2 coredns.yaml</span></span><br></pre></td></tr></table></figure></div></li>
<li>提前下载好coredns的镜像文件并上传到本地harbor上<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull coredns/coredns:1.6.7</span><br><span class="line">docker images</span><br><span class="line">docker tag coredns/coredns:1.6.7 harbor.local.com/<span class="built_in">test</span>/coredns:1.6.7</span><br><span class="line">docker push harbor.local.com/<span class="built_in">test</span>/coredns:1.6.7</span><br></pre></td></tr></table></figure></div></li>
<li>修改配置文件中以下几项<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@master-1:/etc/ansible/manifests/dns<span class="comment"># vim coredns.yml</span></span><br><span class="line">61         kubernetes joker.local <span class="keyword">in</span>-addr.arpa ip6.arpa  <span class="comment">#pod内域名</span></span><br><span class="line">62           <span class="comment">#pods insecure</span></span><br><span class="line">66         forward . 223.6.6.6</span><br><span class="line">112         image: harbor.local.com/<span class="built_in">test</span>/coredns:1.6.7 <span class="comment">#coredns的镜像</span></span><br><span class="line">181   clusterIP: 10.10.0.2 <span class="comment">#pod的内dns地址</span></span><br></pre></td></tr></table></figure></div></li>
<li>部署coredns<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@master-1:/etc/ansible/manifests/dns<span class="comment"># kubectl apply -f coredns.yml</span></span><br></pre></td></tr></table></figure></div>
<h4 id="域名解析测试"><a href="#域名解析测试" class="headerlink" title="域名解析测试"></a>域名解析测试</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@master-1:~<span class="comment"># kubectl exec net-test1-5fcc69db59-6scjt nslookup kubernetes</span></span><br><span class="line">Server:		10.10.0.2</span><br><span class="line">Address:	10.10.0.2:53</span><br><span class="line"></span><br><span class="line">** server can<span class="string">'t find kubernetes.joker.local.: NXDOMAIN</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Name:	kubernetes.default.svc.joker.local</span></span><br><span class="line"><span class="string">Address: 10.10.0.1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">root@master-1:~# kubectl exec net-test1-5fcc69db59-6scjt nslookup kubernetes.default.svc.joker.local</span></span><br><span class="line"><span class="string">Server:		10.10.0.2</span></span><br><span class="line"><span class="string">Address:	10.10.0.2:53</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Name:	kubernetes.default.svc.joker.local</span></span><br><span class="line"><span class="string">Address: 10.10.0.1</span></span><br></pre></td></tr></table></figure></div>
</li>
</ul>
]]></content>
      <categories>
        <category>Gitlab</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>jumpserver介绍及部署</title>
    <url>/2020/03/11/jumpserver%E4%BB%8B%E7%BB%8D%E5%8F%8A%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<!-- TOC -->

<ul>
<li><a href="#jumpserver">Jumpserver</a><ul>
<li><a href="#jumpserver介绍">jumpserver介绍</a></li>
<li><a href="#部署环境">部署环境</a><ul>
<li><a href="#官方服务器配置">官方服务器配置：</a></li>
<li><a href="#服务器准备">服务器准备：</a></li>
<li><a href="#部署mysql服务">部署mysql服务</a><ul>
<li><a href="#docker-pull-mysql镜像">docker pull mysql镜像</a></li>
<li><a href="#mysqldcnf配置文件">mysqld.cnf配置文件</a></li>
<li><a href="#mysqlcnf的配置文件">mysql.cnf的配置文件</a></li>
<li><a href="#创建mysql的数据目录">创建mysql的数据目录</a></li>
<li><a href="#运行mysql容器">运行mysql容器</a></li>
<li><a href="#创建jumpserver数据库">创建jumpserver数据库</a></li>
</ul>
</li>
<li><a href="#部署redis服务">部署redis服务：</a></li>
<li><a href="#部署jumpserver">部署jumpserver</a></li>
</ul>
</li>
<li><a href="#jumpserver部署完成">jumpserver部署完成</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="Jumpserver"><a href="#Jumpserver" class="headerlink" title="Jumpserver"></a>Jumpserver</h1><h2 id="jumpserver介绍"><a href="#jumpserver介绍" class="headerlink" title="jumpserver介绍"></a>jumpserver介绍</h2><p>Jumpserver 是一款使用 Python, Django 开发的开源跳板机系统, 为互联网企业提供了认证，授权，审计，自动化运维等功能。<br><a href="/2020/03/11/jumpserver%E4%BB%8B%E7%BB%8D%E5%8F%8A%E9%83%A8%E7%BD%B2/jumpserver01.jpg" data-fancybox="group" data-caption="jumpserver01" class="fancybox"><img alt="jumpserver01" title="jumpserver01" data-src="/2020/03/11/jumpserver%E4%BB%8B%E7%BB%8D%E5%8F%8A%E9%83%A8%E7%BD%B2/jumpserver01.jpg" class="lazyload"></a></p>
<p>官方地址：<a href="http://www.jumpserver.org/" target="_blank" rel="noopener">http://www.jumpserver.org/</a></p>
<p><a href="/2020/03/11/jumpserver%E4%BB%8B%E7%BB%8D%E5%8F%8A%E9%83%A8%E7%BD%B2/%E5%8A%9F%E8%83%BD%E6%8F%8F%E8%BF%B0.png" data-fancybox="group" data-caption="功能描述" class="fancybox"><img alt="功能描述" title="功能描述" data-src="/2020/03/11/jumpserver%E4%BB%8B%E7%BB%8D%E5%8F%8A%E9%83%A8%E7%BD%B2/%E5%8A%9F%E8%83%BD%E6%8F%8F%E8%BF%B0.png" class="lazyload"></a></p>
<ul>
<li>jumpserver与openvpn搭配</li>
</ul>
<p><a href="/2020/03/11/jumpserver%E4%BB%8B%E7%BB%8D%E5%8F%8A%E9%83%A8%E7%BD%B2/jumpserver&openvpn.png" data-fancybox="group" data-caption="123" class="fancybox"><img alt="123" title="123" data-src="/2020/03/11/jumpserver%E4%BB%8B%E7%BB%8D%E5%8F%8A%E9%83%A8%E7%BD%B2/jumpserver&openvpn.png" class="lazyload"></a></p>
<h2 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h2><h3 id="官方服务器配置："><a href="#官方服务器配置：" class="headerlink" title="官方服务器配置："></a>官方服务器配置：</h3><ol>
<li>硬件配置: 2个CPU核心, 4G 内存, 50G 硬盘（最低）</li>
<li>操作系统: Linux 发行版 x86_64</li>
<li>Python = 3.6.x</li>
<li>Mysql Server ≥ 5.6</li>
<li>Mariadb Server ≥ 5.5.56</li>
<li>Redis<h3 id="服务器准备："><a href="#服务器准备：" class="headerlink" title="服务器准备："></a>服务器准备：</h3></li>
<li>192.168.37.100 jumpserver    2c-6G</li>
<li>192.168.37.100 数据库/Redis  2C-2G<h3 id="部署mysql服务"><a href="#部署mysql服务" class="headerlink" title="部署mysql服务"></a>部署mysql服务</h3></li>
<li>外置数据库要求</li>
<li>mysql 版本需要大于等于 5.6</li>
<li>mariadb 版本需要大于等于 5.5.6</li>
<li>数据库编码要求 uft8<h4 id="docker-pull-mysql镜像"><a href="#docker-pull-mysql镜像" class="headerlink" title="docker pull mysql镜像"></a>docker pull mysql镜像</h4></li>
<li>导入 docker load -i mysql5.6.x.tar.gz</li>
<li>直接docker官网pull数据库镜像：docker pull mysql:5.6.x<h4 id="mysqld-cnf配置文件"><a href="#mysqld-cnf配置文件" class="headerlink" title="mysqld.cnf配置文件"></a>mysqld.cnf配置文件</h4>将容器中的mysql配置文件在宿主机通过-v挂载到容器中。<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##mysqld.cnf配置文件：</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># mkdir /etc/mysql/mysql.conf.d -pv</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># cat /etc/mysql/mysql.conf.d/mysqld.cnf</span></span><br><span class="line"><span class="comment"># Copyright (c) 2014, 2016, Oracle and/or its affiliates. All rights reserved.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This program is free software; you can redistribute it and/or modify</span></span><br><span class="line"><span class="comment"># it under the terms of the GNU General Public License as published by</span></span><br><span class="line"><span class="comment"># the Free Software Foundation; version 2 of the License.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This program is distributed in the hope that it will be useful,</span></span><br><span class="line"><span class="comment"># but WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment"># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></span><br><span class="line"><span class="comment"># GNU General Public License for more details.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You should have received a copy of the GNU General Public License</span></span><br><span class="line"><span class="comment"># along with this program; if not, write to the Free Software</span></span><br><span class="line"><span class="comment"># Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The MySQL  Server configuration file.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For explanations see</span></span><br><span class="line"><span class="comment"># http://dev.mysql.com/doc/mysql/en/server-system-variables.html</span></span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">pid-file	= /var/run/mysqld/mysqld.pid</span><br><span class="line">socket		= /var/run/mysqld/mysqld.sock</span><br><span class="line">datadir		= /var/lib/mysql</span><br><span class="line"><span class="comment">#log-error	= /var/log/mysql/error.log</span></span><br><span class="line"><span class="comment"># Disabling symbolic-links is recommended to prevent assorted security risks</span></span><br><span class="line">symbolic-links=0</span><br><span class="line"></span><br><span class="line">character-set-server=utf8</span><br></pre></td></tr></table></figure></div>
<h4 id="mysql-cnf的配置文件"><a href="#mysql-cnf的配置文件" class="headerlink" title="mysql.cnf的配置文件"></a>mysql.cnf的配置文件</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ubuntu1804:~<span class="comment"># mkdir /etc/mysql/conf.d</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># cat /etc/mysql/conf.d/mysql.cnf</span></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure></div>
<h4 id="创建mysql的数据目录"><a href="#创建mysql的数据目录" class="headerlink" title="创建mysql的数据目录"></a>创建mysql的数据目录</h4>数据保存在宿主机上，实现数据与容器分离，当容器运行异常时也可以在启动一个新的容器直接使用宿主机的数据，从而保证业务的正产运行。<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ubuntu1804:~<span class="comment"># mkdir -pv /data/mysql</span></span><br><span class="line">mkdir: created directory <span class="string">'/data'</span></span><br><span class="line">mkdir: created directory <span class="string">'/data/mysql'</span></span><br></pre></td></tr></table></figure></div>
<h4 id="运行mysql容器"><a href="#运行mysql容器" class="headerlink" title="运行mysql容器"></a>运行mysql容器</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#docker安装略过</span></span><br><span class="line"><span class="comment">#启动docker内的mysql</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># docker pull mysql:5.6.47</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># docker run -it -d -p 3306:3306 -v /etc/mysql/mysql.conf.d/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf -v /etc/mysql/conf.d/mysql.cnf:/etc/mysql/conf.d/mysql.cnf -v /data/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD="joker@dt" mysql:5.6.47</span></span><br><span class="line">f7ae15e05832da5b3e5d201f5fe78b25dcd17d40b818633824544a4c5f4c227e</span><br><span class="line"><span class="comment">#查看端口是否映射</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># ss -nutl</span></span><br><span class="line">Netid        State          Recv-Q         Send-Q                    Local Address:Port                   Peer Address:Port         </span><br><span class="line">udp          UNCONN         0              0                         127.0.0.53%lo:53                          0.0.0.0:*            </span><br><span class="line">tcp          LISTEN         0              128                       127.0.0.53%lo:53                          0.0.0.0:*            </span><br><span class="line">tcp          LISTEN         0              128                             0.0.0.0:22                          0.0.0.0:*            </span><br><span class="line">tcp          LISTEN         0              128                           127.0.0.1:6010                        0.0.0.0:*            </span><br><span class="line">tcp          LISTEN         0              128                           127.0.0.1:6011                        0.0.0.0:*            </span><br><span class="line">tcp          LISTEN         0              128                                [::]:22                             [::]:*            </span><br><span class="line">tcp          LISTEN         0              128                               [::1]:6010                           [::]:*            </span><br><span class="line">tcp          LISTEN         0              128                               [::1]:6011                           [::]:*            </span><br><span class="line">tcp          LISTEN         0              128                                   *:3306                              *:*</span><br><span class="line"><span class="comment">#宿主机安装mysql客户端，远程连接docker内的mysql并验证数据库编码</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># apt install mysql-client-core-5.7 -y</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># mysql -uroot -pjoker@dt -h192.168.37.100</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 1</span><br><span class="line">Server version: 5.6.47 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">+--------------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show variables like <span class="string">"%character%"</span>;show variables like <span class="string">"%collation"</span>;</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name            | Value                      |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client     | utf8                       |</span><br><span class="line">| character_set_connection | utf8                       |</span><br><span class="line">| character_set_database   | utf8                       |</span><br><span class="line">| character_set_filesystem | binary                     |</span><br><span class="line">| character_set_results    | utf8                       |</span><br><span class="line">| character_set_server     | utf8                       |</span><br><span class="line">| character_set_system     | utf8                       |</span><br><span class="line">| character_sets_dir       | /usr/share/mysql/charsets/ |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">8 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">Empty <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure></div>
<h4 id="创建jumpserver数据库"><a href="#创建jumpserver数据库" class="headerlink" title="创建jumpserver数据库"></a>创建jumpserver数据库</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建jumpserver的mysql库及授权账号密码（密码不能纯数字否则jumpserver报错）</span></span><br><span class="line">mysql&gt; create database jumpserver default charset <span class="string">'utf8'</span>;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all on jumpserver.* to <span class="string">'jumpserver'</span>@<span class="string">'%'</span>identified by <span class="string">'joker@dt'</span>;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure></div>
<h3 id="部署redis服务："><a href="#部署redis服务：" class="headerlink" title="部署redis服务："></a>部署redis服务：</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ubuntu1804:~<span class="comment"># docker pull redis</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># docker run -it -d 6379:6379 redis:latest</span></span><br><span class="line"><span class="comment">#验证redis</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># redis-cli -h 192.168.37.100</span></span><br><span class="line">192.168.37.100:6379&gt;</span><br></pre></td></tr></table></figure></div>

</li>
</ol>
<h3 id="部署jumpserver"><a href="#部署jumpserver" class="headerlink" title="部署jumpserver"></a>部署jumpserver</h3><p>通过docker镜像部署</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ubuntu1804:~<span class="comment"># docker pull jumpserver/jms_all:1.4.8</span></span><br><span class="line"><span class="comment">#生成随即加密秘钥和初始化token</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># if [ "$SECRET_KEY" = "" ]; then SECRET_KEY=`cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 50`; echo "SECRET_KEY=$SECRET_KEY" &gt;&gt; ~/.bashrc; echo $SECRET_KEY; else echo $SECRET_KEY; fi</span></span><br><span class="line">Sbn2lErQrbpiwdESwUHefBQHEiyp9pPzwttFwk5KV556I1YA80   </span><br><span class="line">root@ubuntu1804:~<span class="comment"># if [ "$BOOTSTRAP_TOKEN" = "" ]; then BOOTSTRAP_TOKEN=`cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`; echo "BOOTSTRAP_TOKEN=$BOOTSTRAP_TOKEN" &gt;&gt; ~/.bashrc; echo $BOOTSTRAP_TOKEN; else echo $BOOTSTRAP_TOKEN; fi</span></span><br><span class="line">LulNx6MkCDtRFRZ1</span><br><span class="line"><span class="comment">#start jumpserver</span></span><br><span class="line">root@ubuntu1804:~<span class="comment"># docker run --name jms_all -d \</span></span><br><span class="line">&gt;     -v /opt/jumpserver:/opt/jumpserver/data/media \</span><br><span class="line">&gt;     -p 80:80 \</span><br><span class="line">&gt;     -p 2222:2222 \</span><br><span class="line">&gt;     -e SECRET_KEY=Sbn2lErQrbpiwdESwUHefBQHEiyp9pPzwttFwk5KV556I1YA80 \</span><br><span class="line">&gt;     -e BOOTSTRAP_TOKEN=LulNx6MkCDtRFRZ1 \</span><br><span class="line">&gt;     -e DB_HOST=192.168.37.100 \</span><br><span class="line">&gt;     -e DB_PORT=3306 \</span><br><span class="line">&gt;     -e DB_USER=jumpserver \</span><br><span class="line">&gt;     -e DB_PASSWORD=joker@dt \</span><br><span class="line">&gt;     -e DB_NAME=jumpserver \</span><br><span class="line">&gt;     -e REDIS_HOST=192.168.37.100 \</span><br><span class="line">&gt;     -e REDIS_PORT=6379 \</span><br><span class="line">&gt;     -e REDIS_PASSWORD= \</span><br><span class="line">&gt;     jumpserver/jms_all:1.4.8</span><br><span class="line">57033a1cabdc2637be71e949c7fc391eb1d219ab96f3ab7e0f3e2e197ca7538c</span><br></pre></td></tr></table></figure></div>
<h2 id="jumpserver部署完成"><a href="#jumpserver部署完成" class="headerlink" title="jumpserver部署完成"></a>jumpserver部署完成</h2><p>可通过web登陆：<a href="http://192.168.37.100" target="_blank" rel="noopener">http://192.168.37.100</a> 账户和密码都是admin</p>
]]></content>
      <categories>
        <category>Jumeserver</category>
      </categories>
      <tags>
        <tag>Jumpserver</tag>
      </tags>
  </entry>
  <entry>
    <title>rabbitmq单机部署</title>
    <url>/2020/03/24/rabbitmq%E5%8D%95%E6%9C%BA%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<!-- TOC -->

<ul>
<li><a href="#rabbitmq-单机部署">rabbitmq 单机部署</a><ul>
<li><a href="#环境要求">环境要求</a></li>
<li><a href="#在当前主机服务武器配置本机主机名解析">在当前主机服务武器配置本机主机名解析</a></li>
<li><a href="#安装rabbitmq所需的repo源及key">安装rabbitmq所需的repo源及key</a></li>
<li><a href="#安装指定版本rabbitmq">安装指定版本rabbitmq</a></li>
<li><a href="#启动及配置">启动及配置</a></li>
<li><a href="#释放guest用户可远程登录330版本之后">释放guest用户可远程登录3.3.0版本之后</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="rabbitmq-单机部署"><a href="#rabbitmq-单机部署" class="headerlink" title="rabbitmq 单机部署"></a>rabbitmq 单机部署</h1><h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><ul>
<li>1台centos7或8 centos7的erlang版本低，需要从erlang官网下载:<a href="https://www.erlang-solutions.com/resources/download.html" target="_blank" rel="noopener">https://www.erlang-solutions.com/resources/download.html</a></li>
<li>IP地址：192.168.37.5<h2 id="在当前主机服务武器配置本机主机名解析"><a href="#在当前主机服务武器配置本机主机名解析" class="headerlink" title="在当前主机服务武器配置本机主机名解析"></a>在当前主机服务武器配置本机主机名解析</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#配置主机名解析，有dns在dns里添加A记录</span></span><br><span class="line">[root@Centos8mini ~]<span class="comment"># cat /etc/hosts</span></span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">192.168.37.5 Centos8mini</span><br></pre></td></tr></table></figure></div>
<h2 id="安装rabbitmq所需的repo源及key"><a href="#安装rabbitmq所需的repo源及key" class="headerlink" title="安装rabbitmq所需的repo源及key"></a>安装rabbitmq所需的repo源及key</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos8mini ~]<span class="comment"># cat /data/rabbitmq-server-repo.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#**********************************************************************</span></span><br><span class="line"><span class="comment">#Author:        zp.duan</span></span><br><span class="line"><span class="comment">#QQ:            760245899</span></span><br><span class="line"><span class="comment">#Data:          2020-03-24</span></span><br><span class="line"><span class="comment">#URL:           http:</span></span><br><span class="line"><span class="comment">#FileName:      rabbitmq-server-repo.sh</span></span><br><span class="line"><span class="comment">#Description:   The test script</span></span><br><span class="line"><span class="comment">#Copyright(C): 2020All rights reserved</span></span><br><span class="line"><span class="comment">#*********************************************************************</span></span><br><span class="line"><span class="comment">#适用于centos7和8的repo安装</span></span><br><span class="line">NU=`awk -F<span class="string">'[ .]'</span> <span class="string">'&#123; print $4 &#125;'</span> /etc/redhat-release`</span><br><span class="line"><span class="comment">#安装erlang语言</span></span><br><span class="line">yum install erlang -y</span><br><span class="line"><span class="comment">#安装key</span></span><br><span class="line">rpm --import https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey &amp;&amp; rpm --import https://packagecloud.io/gpg.key</span><br><span class="line"><span class="comment">#安装包秘钥</span></span><br><span class="line">rpm --import https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc</span><br><span class="line"><span class="comment">#安装repo源</span></span><br><span class="line">/usr/bin/tee /etc/yum.repos.d/rabbitmq.repo &lt;&lt; EOF</span><br><span class="line">[bintray-rabbitmq-server]</span><br><span class="line">name=bintray-rabbitmq-rpm</span><br><span class="line">baseurl=https://dl.bintray.com/rabbitmq/rpm/rabbitmq-server/v3.8.x/el/<span class="variable">$&#123;NU&#125;</span>/</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">yum repolist</span><br><span class="line"><span class="comment"># 运行此脚本</span></span><br><span class="line">[root@Centos8mini ~]<span class="comment"># bash /data/rabbitmq-server-repo.sh</span></span><br></pre></td></tr></table></figure></div>
<h2 id="安装指定版本rabbitmq"><a href="#安装指定版本rabbitmq" class="headerlink" title="安装指定版本rabbitmq"></a>安装指定版本rabbitmq</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看rabbitmq有哪些版本</span></span><br><span class="line">[root@Centos8mini ~]<span class="comment"># yum list rabbitmq* --showduplicates</span></span><br><span class="line">Repository <span class="string">'epel'</span> is missing name <span class="keyword">in</span> configuration, using id.</span><br><span class="line">Last metadata expiration check: 0:06:11 ago on Tue 24 Mar 2020 11:21:15 AM CST.</span><br><span class="line">Available Packages</span><br><span class="line">rabbitmq-server.noarch                    3.8.0-1.el8                     bintray-rabbitmq-server</span><br><span class="line">rabbitmq-server.noarch                    3.8.1-1.el8                     bintray-rabbitmq-server</span><br><span class="line">rabbitmq-server.noarch                    3.8.2-1.el8                     bintray-rabbitmq-server</span><br><span class="line">rabbitmq-server.noarch                    3.8.3-1.el8                     bintray-rabbitmq-server</span><br><span class="line"><span class="comment">#安装指定版本</span></span><br><span class="line">[root@Centos8mini ~]<span class="comment"># yum install rabbitmq-server-3.8.3-1.el8 -y</span></span><br></pre></td></tr></table></figure></div>
<h2 id="启动及配置"><a href="#启动及配置" class="headerlink" title="启动及配置"></a>启动及配置</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos8mini ~]<span class="comment"># systemctl start rabbitmq-server.service </span></span><br><span class="line">[root@Centos8mini ~]<span class="comment"># ss -nutl</span></span><br><span class="line">Netid       State         Recv-Q        Send-Q                     Local Address:Port                 Peer Address:Port        </span><br><span class="line">udp         UNCONN        0             0                     192.168.37.5%ens33:68                        0.0.0.0:*           </span><br><span class="line">tcp         LISTEN        0             128                              0.0.0.0:22                        0.0.0.0:*           </span><br><span class="line">tcp         LISTEN        0             128                              0.0.0.0:25672                     0.0.0.0:*           </span><br><span class="line">tcp         LISTEN        0             128                              0.0.0.0:4369                      0.0.0.0:*           </span><br><span class="line">tcp         LISTEN        0             128                                 [::]:22                           [::]:*           </span><br><span class="line">tcp         LISTEN        0             128                                    *:5672                            *:*           </span><br><span class="line">tcp         LISTEN        0             128                                 [::]:4369                         [::]:*</span><br><span class="line"><span class="comment">#端口介绍： 5672端口是消费者，15672是web管理接口， 25672是集群状态通信端口</span></span><br><span class="line"><span class="comment">#查询rabbitmq的插件及启动web插件app，启动插件不需重启服务</span></span><br><span class="line">[root@Centos8mini ~]<span class="comment"># rabbitmq-plugins list</span></span><br><span class="line">Listing plugins with pattern <span class="string">".*"</span> ...</span><br><span class="line"> Configured: E = explicitly enabled; e = implicitly enabled</span><br><span class="line"> | Status: * = running on rabbit@Centos8mini</span><br><span class="line"> |/</span><br><span class="line">[  ] rabbitmq_amqp1_0                  3.8.3</span><br><span class="line">[  ] rabbitmq_auth_backend_cache       3.8.3</span><br><span class="line">[  ] rabbitmq_auth_backend_http        3.8.3</span><br><span class="line">[  ] rabbitmq_auth_backend_ldap        3.8.3</span><br><span class="line">[  ] rabbitmq_auth_backend_oauth2      3.8.3</span><br><span class="line">[  ] rabbitmq_auth_mechanism_ssl       3.8.3</span><br><span class="line">[  ] rabbitmq_consistent_hash_exchange 3.8.3</span><br><span class="line">[  ] rabbitmq_event_exchange           3.8.3</span><br><span class="line">[  ] rabbitmq_federation               3.8.3</span><br><span class="line">[  ] rabbitmq_federation_management    3.8.3</span><br><span class="line">[  ] rabbitmq_jms_topic_exchange       3.8.3</span><br><span class="line">[  ] rabbitmq_management               3.8.3</span><br><span class="line">[  ] rabbitmq_management_agent         3.8.3</span><br><span class="line">[  ] rabbitmq_mqtt                     3.8.3</span><br><span class="line">[  ] rabbitmq_peer_discovery_aws       3.8.3</span><br><span class="line">[  ] rabbitmq_peer_discovery_common    3.8.3</span><br><span class="line">[  ] rabbitmq_peer_discovery_consul    3.8.3</span><br><span class="line">[  ] rabbitmq_peer_discovery_etcd      3.8.3</span><br><span class="line">[  ] rabbitmq_peer_discovery_k8s       3.8.3</span><br><span class="line">[  ] rabbitmq_prometheus               3.8.3</span><br><span class="line">[  ] rabbitmq_random_exchange          3.8.3</span><br><span class="line">[  ] rabbitmq_recent_history_exchange  3.8.3</span><br><span class="line">[  ] rabbitmq_sharding                 3.8.3</span><br><span class="line">[  ] rabbitmq_shovel                   3.8.3</span><br><span class="line">[  ] rabbitmq_shovel_management        3.8.3</span><br><span class="line">[  ] rabbitmq_stomp                    3.8.3</span><br><span class="line">[  ] rabbitmq_top                      3.8.3</span><br><span class="line">[  ] rabbitmq_tracing                  3.8.3</span><br><span class="line">[  ] rabbitmq_trust_store              3.8.3</span><br><span class="line">[  ] rabbitmq_web_dispatch             3.8.3</span><br><span class="line">[  ] rabbitmq_web_mqtt                 3.8.3</span><br><span class="line">[  ] rabbitmq_web_mqtt_examples        3.8.3</span><br><span class="line">[  ] rabbitmq_web_stomp                3.8.3</span><br><span class="line">[  ] rabbitmq_web_stomp_examples       3.8.3</span><br><span class="line">[root@Centos8mini ~]<span class="comment"># rabbitmq-plugins enable rabbitmq_management</span></span><br><span class="line">Enabling plugins on node rabbit@Centos8mini:</span><br><span class="line">rabbitmq_management</span><br><span class="line">The following plugins have been configured:</span><br><span class="line">  rabbitmq_management</span><br><span class="line">  rabbitmq_management_agent</span><br><span class="line">  rabbitmq_web_dispatch</span><br><span class="line">Applying plugin configuration to rabbit@Centos8mini...</span><br><span class="line">The following plugins have been enabled:</span><br><span class="line">  rabbitmq_management</span><br><span class="line">  rabbitmq_management_agent</span><br><span class="line">  rabbitmq_web_dispatch</span><br></pre></td></tr></table></figure></div>
<h2 id="释放guest用户可远程登录3-3-0版本之后"><a href="#释放guest用户可远程登录3-3-0版本之后" class="headerlink" title="释放guest用户可远程登录3.3.0版本之后"></a>释放guest用户可远程登录3.3.0版本之后</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos8mini ~]<span class="comment"># vim /usr/lib/rabbitmq/lib/rabbitmq_server-3.8.3/ebin/rabbit.app</span></span><br><span class="line">39             &#123;loopback_users, []&#125;, <span class="comment">#第39行内的&lt;&lt;"guest"&gt;&gt;去掉</span></span><br><span class="line"><span class="comment"># 重启rabbitmq服务</span></span><br><span class="line">[root@Centos8mini ~]<span class="comment"># systemctl restart rabbitmq-server.service</span></span><br></pre></td></tr></table></figure></div></li>
</ul>
]]></content>
      <categories>
        <category>rabbitmq</category>
      </categories>
      <tags>
        <tag>rabbitmq</tag>
      </tags>
  </entry>
  <entry>
    <title>rabbitmq简介</title>
    <url>/2020/03/24/rabbitmq%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<!-- TOC -->

<ul>
<li><a href="#rabbitmq介绍">rabbitmq介绍</a><ul>
<li><a href="#简介">简介</a></li>
<li><a href="#rabbitmq内部介绍">rabbitmq内部介绍</a></li>
<li><a href="#rabitmq中的生产者消费者示意图">rabitmq中的生产者消费者示意图</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="rabbitmq介绍"><a href="#rabbitmq介绍" class="headerlink" title="rabbitmq介绍"></a>rabbitmq介绍</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul>
<li><p>官网：<a href="https://www.rabbitmq.com/" target="_blank" rel="noopener">https://www.rabbitmq.com/</a></p>
</li>
<li><p>阿里云消息队列：<a href="https://www.aliyun.com/product/ons?spm=5176.234368.h2v3icoap.427.2620db25lcHi1Q&amp;aly_as=Tz_Lue_o" target="_blank" rel="noopener">https://www.aliyun.com/product/ons?spm=5176.234368.h2v3icoap.427.2620db25lcHi1Q&amp;aly_as=Tz_Lue_o</a></p>
</li>
<li><p>rabbitmq定义：</p>
<p>  rabbitmq采用erlang语言开发，erlang语言由ericson设计，erlang在分布式编程和故障恢复方面表现出色，电信领域被广泛使用。</p>
<h2 id="rabbitmq内部介绍"><a href="#rabbitmq内部介绍" class="headerlink" title="rabbitmq内部介绍"></a>rabbitmq内部介绍</h2><p><a href="/2020/03/24/rabbitmq%E7%AE%80%E4%BB%8B/rabbitmq%E5%8E%9F%E7%90%86%E5%9B%BE.png" data-fancybox="group" data-caption="rabbit" class="fancybox"><img alt="rabbit" title="rabbit" data-src="/2020/03/24/rabbitmq%E7%AE%80%E4%BB%8B/rabbitmq%E5%8E%9F%E7%90%86%E5%9B%BE.png" class="lazyload"></a></p>
</li>
<li><p>broker：接收和分发消息的应用，rabbitmq server就是message broker。</p>
</li>
<li><p>virtual host：出于多租户和安全因素设计的，把amqp的基本组件分到一个虚拟的分组中，类似于网络中的额namespace概念，当多个不同的用户使用同一个rabbitmq server 提供的服务时，可以划分出多个vhost，每个用户在自己的vhost创建exchange/queue等。</p>
</li>
<li><p>connection：publisher/consumer和broker之间的tcp连接。</p>
</li>
<li><p>channel：如果每一次访问rabbitmq都建立一个connection，在消息量大的时候建立tcp connection的开销将是巨大的，效率也较低。channel是在connection内部建立的逻辑连接，如果应用程序支持多线程，通常每个thread创建单独的channel进行通讯，amqp method包含了channelid帮助客户端和message broker识别channel，所以channel之间是完全隔离的。channel作为轻量级的connection极大减少了操作系统建立tcp connection的开销。</p>
</li>
<li><p>exchange：message到达broker的第一站，根据分发规则，匹配查询表中的routing key ，分发消息到queue中去。常用的类型有：direct（point-to-point），topic（publish-subscribe）and fanout（multicast）</p>
</li>
<li><p>queue: 消息最终被送到这里等待consumer取走。</p>
</li>
<li><p>binding：exchange和queue之间的虚拟连接，binding中可以包含routing key。binding信息被保存到exchange中的查询表中，用于message的分发依据。</p>
<h2 id="rabitmq中的生产者消费者示意图"><a href="#rabitmq中的生产者消费者示意图" class="headerlink" title="rabitmq中的生产者消费者示意图"></a>rabitmq中的生产者消费者示意图</h2><p><a href="/2020/03/24/rabbitmq%E7%AE%80%E4%BB%8B/rabbitmq%E8%B7%AF%E7%A8%8B%E5%9B%BE.png" data-fancybox="group" data-caption="rabbitmq流程图" class="fancybox"><img alt="rabbitmq流程图" title="rabbitmq流程图" data-src="/2020/03/24/rabbitmq%E7%AE%80%E4%BB%8B/rabbitmq%E8%B7%AF%E7%A8%8B%E5%9B%BE.png" class="lazyload"></a></p>
</li>
</ul>
<p>解释：</p>
<pre><code>生产者发送消息到broker server（rabbitmq），在broker内部，用户创建exchange/queue,通过binding规则将两者联系在一起，exchange分发消息，根据类型/binding的不同分发策略有区别，消息最后来到queue中，等待消费者取走。</code></pre>]]></content>
      <categories>
        <category>rabbitmq</category>
      </categories>
      <tags>
        <tag>rabbitmq</tag>
      </tags>
  </entry>
  <entry>
    <title>rabbitmq集群部署</title>
    <url>/2020/03/24/rabbitmq%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<!-- TOC -->

<ul>
<li><a href="#rabbitmq集群">rabbitmq集群</a><ul>
<li><a href="#rabbitmq集群模式分两种">rabbitmq集群模式分两种</a></li>
<li><a href="#集群中节点模式">集群中节点模式</a></li>
<li><a href="#推荐架构">推荐架构</a></li>
<li><a href="#搭建环境要求">搭建环境要求</a><ul>
<li><a href="#添加3台主机解析">添加3台主机解析</a></li>
<li><a href="#3台服务器分别执行脚本安装erlang语言及key">3台服务器分别：执行脚本，安装erlang语言及key</a></li>
</ul>
</li>
<li><a href="#分别启动3台服务器">分别启动3台服务器</a></li>
<li><a href="#分别加入节点生成集群">分别加入节点生成集群</a></li>
<li><a href="#上述rabbitmq集群搭建完成工作模式为普通模式">上述rabbitmq集群搭建完成，工作模式为普通模式</a></li>
<li><a href="#更改rabbitmq工作模式">更改rabbitmq工作模式</a><ul>
<li><a href="#修改为镜像模式">修改为镜像模式</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="rabbitmq集群"><a href="#rabbitmq集群" class="headerlink" title="rabbitmq集群"></a>rabbitmq集群</h1><h2 id="rabbitmq集群模式分两种"><a href="#rabbitmq集群模式分两种" class="headerlink" title="rabbitmq集群模式分两种"></a>rabbitmq集群模式分两种</h2><ul>
<li><p>普通集群模式</p>
<p>  queue创建之后，如果没有其它policy，消息实体只存在于其中一个节点，A、B两个Rabbitmq节点仅有相同的元数据，即队列结构，但队列的数据仅保存有一份，即创建该队列的rabbitmq节点（A节点），当消息进入A节点的Queue中后，consumer从B节点拉取时，RabbitMQ会临时在A、B间进行消息传输，把A中的消息实体取出并经过B发送给consumer，所以consumer可以连接每一个节点，从中取消息，该模式存在一个问题就是当A节点故障后，B节点无法取到A节点中还未消费的消息实体。</p>
</li>
<li><p>镜像模式</p>
<p>  把需要的队列做成镜像队列，存在于多个节点，属于RabbitMQ的HA方案（镜像模式是在普通模式的基础上，增加一些镜像策略）该模式解决了普通模式中的数据丢失问题，其实质和普通模式不同之处在于，消息实体会主动在镜像节点间同步，而不是在consumer取数据时临时拉取，该模式带来的副作用也很明显，除了降低系统性能外，如果镜像队列数量过多，加之大量的消息进入，集群内部的网络带宽将会被这种同步通讯大大消耗掉，所以在对可靠性要求较高的场合中适用，一个队列想做成镜像队列，需要先设置policy，然后客户端创建队列的时候，rabbitmq集群根据“队列名称”自动设置是普通集群模式或镜像队列。</p>
</li>
<li><p>区别</p>
<p>  普通模式：数据不安全，消息只会存在某个节点，如果其中一个宕机，数据就丢失。<br>  镜像模式：数据安全，每个节点都有数据，缺点：会降低系统性能，增加网络带宽负荷。</p>
</li>
</ul>
<h2 id="集群中节点模式"><a href="#集群中节点模式" class="headerlink" title="集群中节点模式"></a>集群中节点模式</h2><ul>
<li>内存节点：数据保存在内存中，如果集群全是内存节点，那么该集群不能全部停止，否则数据丢失。</li>
<li>磁盘节点：数据保存在内存和磁盘中，内存数据不写入磁盘，集群中只要一个节点数据写入到磁盘作为备份就足够了，起到备份，数据安全。</li>
</ul>
<h2 id="推荐架构"><a href="#推荐架构" class="headerlink" title="推荐架构"></a>推荐架构</h2><pre><code>在一个rabbitmq集群中，有3台及以上节点，其中一台节点使用磁盘模式，其余是内存模式，内存节点无访问速度更快，由于磁盘io相对较慢，可作为备份节点使用。</code></pre><h2 id="搭建环境要求"><a href="#搭建环境要求" class="headerlink" title="搭建环境要求"></a>搭建环境要求</h2><ul>
<li>3台机器centos7或8</li>
<li>ip地址：<ul>
<li>node1：192.168.37.10</li>
<li>node2：192.168.37.20</li>
<li>node3：192.168.37.5<h3 id="添加3台主机解析"><a href="#添加3台主机解析" class="headerlink" title="添加3台主机解析"></a>添加3台主机解析</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#把一下解析内容复制到rabbitmq集群中的hosts文件</span></span><br><span class="line">[root@Centos8mini ~]<span class="comment"># cat /etc/hosts</span></span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">192.168.37.10 CentOS7</span><br><span class="line">192.168.37.20 CentOS7-server</span><br><span class="line">192.168.37.5 Centos8mini</span><br></pre></td></tr></table></figure></div>
<h3 id="3台服务器分别：执行脚本，安装erlang语言及key"><a href="#3台服务器分别：执行脚本，安装erlang语言及key" class="headerlink" title="3台服务器分别：执行脚本，安装erlang语言及key"></a>3台服务器分别：执行脚本，安装erlang语言及key</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos8mini ~]<span class="comment"># cat /data/rabbitmq-server-repo.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#**********************************************************************</span></span><br><span class="line"><span class="comment">#Author:        zp.duan</span></span><br><span class="line"><span class="comment">#QQ:            760245899</span></span><br><span class="line"><span class="comment">#Data:          2020-03-24</span></span><br><span class="line"><span class="comment">#URL:           http:</span></span><br><span class="line"><span class="comment">#FileName:      rabbitmq-server-repo.sh</span></span><br><span class="line"><span class="comment">#Description:   The test script</span></span><br><span class="line"><span class="comment">#Copyright(C): 2020All rights reserved</span></span><br><span class="line"><span class="comment">#*********************************************************************</span></span><br><span class="line"><span class="comment">#适用于centos7和8的repo安装</span></span><br><span class="line">NU=`awk -F<span class="string">'[ .]'</span> <span class="string">'&#123; print $4 &#125;'</span> /etc/redhat-release`</span><br><span class="line"><span class="comment">#安装erlang语言</span></span><br><span class="line">yum install erlang -y</span><br><span class="line"><span class="comment">#安装key</span></span><br><span class="line">rpm --import https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey &amp;&amp; rpm --import https://packagecloud.io/gpg.key</span><br><span class="line"><span class="comment">#安装包秘钥</span></span><br><span class="line">rpm --import https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc</span><br><span class="line"><span class="comment">#安装repo源</span></span><br><span class="line">/usr/bin/tee /etc/yum.repos.d/rabbitmq.repo &lt;&lt; EOF</span><br><span class="line">[bintray-rabbitmq-server]</span><br><span class="line">name=bintray-rabbitmq-rpm</span><br><span class="line">baseurl=https://dl.bintray.com/rabbitmq/rpm/rabbitmq-server/v3.8.x/el/<span class="variable">$&#123;NU&#125;</span>/</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">EOF</span><br><span class="line">[root@Centos8mini ~]<span class="comment"># bash /data/rabbitmq-server-repo.sh</span></span><br></pre></td></tr></table></figure></div>
<h2 id="分别启动3台服务器"><a href="#分别启动3台服务器" class="headerlink" title="分别启动3台服务器"></a>分别启动3台服务器</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#分别启动三台服务器</span></span><br><span class="line">systemctl start rabbitmq-server.service</span><br><span class="line">systemctl <span class="built_in">enable</span> rabbitmq-server.service  </span><br><span class="line"><span class="comment">#分别查询状态</span></span><br><span class="line">[root@CentOS7 ~]<span class="comment"># rabbitmqctl cluster_status</span></span><br><span class="line">Cluster status of node rabbit@CentOS7 ...</span><br><span class="line">Basics</span><br><span class="line"></span><br><span class="line">Cluster name: rabbit@Centos8mini</span><br><span class="line"></span><br><span class="line">Disk Nodes</span><br><span class="line"></span><br><span class="line">rabbit@Centos8mini</span><br><span class="line">···省略···</span><br><span class="line"><span class="comment">#依次停止所有服务器rabbit服务，</span></span><br><span class="line">systemctl stop rabbitmq-server.service</span><br><span class="line"><span class="comment">#创建rabbitmq集群，拷贝cookie文件到另外两台服务器，集群依赖erlang集群工作，文件权限是400，该集群的所有节点中的cookie必须一致，否则节点无法通信。</span></span><br><span class="line"><span class="comment">#拷贝节点到192.168.37.5</span></span><br><span class="line">scp /var/lib/rabbitmq/.erlang.cookie root@192.168.37.5:/var/lib/rabbitmq/.erlang.cookie</span><br><span class="line"><span class="comment">#拷贝到192.168.37.20</span></span><br><span class="line">scp /var/lib/rabbitmq/.erlang.cookie root@192.168.37.20:/var/lib/rabbitmq/.erlang.cookie</span><br><span class="line"><span class="comment">#依次启动rabbitmq服务</span></span><br><span class="line">systemctl start rabbitmq-server.service</span><br></pre></td></tr></table></figure></div>
<h2 id="分别加入节点生成集群"><a href="#分别加入节点生成集群" class="headerlink" title="分别加入节点生成集群"></a>分别加入节点生成集群</h2></li>
</ul>
</li>
</ul>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#暂停节点内app</span></span><br><span class="line">rabbitmqctl stop_app</span><br><span class="line"><span class="comment">#清空数据</span></span><br><span class="line">rabbitmqctl reset</span><br><span class="line"><span class="comment">#依次把节点添加到192.168.37.5上rabbit@Centos8mini这是该节点名称可用rabbitmqctl cluster_status查看，加ram表示节点以内存模式保存数据，不加则是磁盘</span></span><br><span class="line">rabbitmqctl join_cluster rabbit@Centos8mini --ram</span><br><span class="line"><span class="comment">#开启app</span></span><br><span class="line">rabbitmqctl start_app</span><br><span class="line"><span class="comment">## 在节点192.168.37.20.执行上述步骤即可</span></span><br></pre></td></tr></table></figure></div>
<h2 id="上述rabbitmq集群搭建完成，工作模式为普通模式"><a href="#上述rabbitmq集群搭建完成，工作模式为普通模式" class="headerlink" title="上述rabbitmq集群搭建完成，工作模式为普通模式"></a>上述rabbitmq集群搭建完成，工作模式为普通模式</h2><h2 id="更改rabbitmq工作模式"><a href="#更改rabbitmq工作模式" class="headerlink" title="更改rabbitmq工作模式"></a>更改rabbitmq工作模式</h2><h3 id="修改为镜像模式"><a href="#修改为镜像模式" class="headerlink" title="修改为镜像模式"></a>修改为镜像模式</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#任意一个节点上执行</span></span><br><span class="line">```bash</span><br><span class="line">[root@CentOS7 ~]<span class="comment"># rabbitmqctl set_policy ha-all "#" '&#123;"ha-mode":"all"&#125;'</span></span><br><span class="line">Setting policy <span class="string">"ha-all"</span> <span class="keyword">for</span> pattern <span class="string">"#"</span> to <span class="string">"&#123;"</span>ha-mode<span class="string">":"</span>all<span class="string">"&#125;"</span> with priority <span class="string">"0"</span> <span class="keyword">for</span> vhost <span class="string">"/"</span> ...</span><br></pre></td></tr></table></figure></div>
<h2 id="分别启动rabbitmq的web插件及修改guset用户登录"><a href="#分别启动rabbitmq的web插件及修改guset用户登录" class="headerlink" title="分别启动rabbitmq的web插件及修改guset用户登录"></a>分别启动rabbitmq的web插件及修改guset用户登录</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos8mini ~]<span class="comment"># rabbitmq-plugins enable rabbitmq_management</span></span><br><span class="line">[root@Centos8mini ~]<span class="comment"># vim /usr/lib/rabbitmq/lib/rabbitmq_server-3.8.3/ebin/rabbit.app</span></span><br><span class="line">39             &#123;loopback_users, []&#125;, <span class="comment">#第39行内的&lt;&lt;"guest"&gt;&gt;去掉</span></span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>rabbitmq</category>
      </categories>
      <tags>
        <tag>rabbitmq</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SSH免密登陆</title>
    <url>/2020/03/13/%E5%9F%BA%E4%BA%8ESSH%E5%85%8D%E5%AF%86%E7%99%BB%E9%99%86/</url>
    <content><![CDATA[<!-- TOC -->

<ul>
<li><a href="#基于ssh的堡垒机远程管理各个服务器">基于SSH的堡垒机，远程管理各个服务器：</a></li>
<li><a href="#使用ssh工具代理私钥密码授权一次密码就不再输密码除非堡垒机centos7终端退出">使用ssh工具代理私钥密码，授权一次密码就不再输密码，除非堡垒机centos7终端退出：</a></li>
</ul>
<!-- /TOC -->

<h2 id="基于SSH的堡垒机，远程管理各个服务器："><a href="#基于SSH的堡垒机，远程管理各个服务器：" class="headerlink" title="基于SSH的堡垒机，远程管理各个服务器："></a>基于SSH的堡垒机，远程管理各个服务器：</h2><pre><code>#实验条件：3台基于centos系统的服务器，堡垒机为centos7，2台centos6、centos8；
#修改/etc/ssh/ssh_config配置文件内：</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#	vim /etc/ssh/ssh_config</span></span><br><span class="line"><span class="comment">#   StrictHostKeyChecking ask  改成 StrictHostKeyChecking no   //关闭登录询问提示；</span></span><br></pre></td></tr></table></figure></div>
<h2 id="在堡垒机上使用ssh-keygen生成公私钥："><a href="#在堡垒机上使用ssh-keygen生成公私钥：" class="headerlink" title="在堡垒机上使用ssh-keygen生成公私钥："></a>在堡垒机上使用ssh-keygen生成公私钥：</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@CentOS7 ~]<span class="comment">#ssh-keygen</span></span><br><span class="line">   Generating public/private rsa key pair.</span><br><span class="line">   Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa): </span><br><span class="line">   Created directory <span class="string">'/root/.ssh'</span>.</span><br><span class="line">   Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">   Enter same passphrase again: </span><br><span class="line">   Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.</span><br><span class="line">   Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.</span><br><span class="line">   The key fingerprint is:</span><br><span class="line">   SHA256:Bjlsj1SmtIWw155Q1Trki31FfNV08dMC2AqKKdUC96c root@CentOS7</span><br><span class="line">   The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">   +---[RSA 2048]----+</span></span><br><span class="line"><span class="string">   |  ..oo..=..+.. oB|</span></span><br><span class="line"><span class="string">   |   .o=oX. o o.o *|</span></span><br><span class="line"><span class="string">   |   ..+&amp;.o+ o ..oo|</span></span><br><span class="line"><span class="string">   |  . o+.X .=   ...|</span></span><br><span class="line"><span class="string">   |   .  E So o .   |</span></span><br><span class="line"><span class="string">   |       .. o .    |</span></span><br><span class="line"><span class="string">   |           .     |</span></span><br><span class="line"><span class="string">   |                 |</span></span><br><span class="line"><span class="string">   |                 |</span></span><br><span class="line"><span class="string">   +----[SHA256]-----+</span></span><br></pre></td></tr></table></figure></div>

<pre><code>#查看是否生成：</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@CentOS7 ~]<span class="comment">#ll .ssh/</span></span><br><span class="line">   total 8</span><br><span class="line">   -rw-------. 1 root root 1675 Nov  6 20:47 id_rsa</span><br><span class="line">   -rw-r--r--. 1 root root  394 Nov  6 20:47 id_rsa.pub</span><br></pre></td></tr></table></figure></div>
<pre><code>#使用ssh提供的ssh-copy-id工具拷贝到centos8上；</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@CentOS7 ~]<span class="comment">#ssh-copy-id -i /root/.ssh/id_rsa.pub root@192.168.37.106</span></span><br><span class="line">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: <span class="string">"/root/.ssh/id_rsa.pub"</span></span><br><span class="line">The authenticity of host <span class="string">'192.168.37.106 (192.168.37.106)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:ECZCx5fZY9+sPSWbOZb2So7KkLCcnfXIAei7Rl9k84w.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is MD5:fd:95:82:5a:db:f7:e2:96:82:17:20:4e:b8:23:22:c3.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span></span><br><span class="line"><span class="string">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span></span><br><span class="line"><span class="string">root@192.168.37.106'</span>s password: </span><br><span class="line"></span><br><span class="line">Number of key(s) added: 1</span><br><span class="line"></span><br><span class="line">Now try logging into the machine, with:   <span class="string">"ssh 'root@192.168.37.106'"</span></span><br><span class="line">and check to make sure that only the key(s) you wanted were added.</span><br></pre></td></tr></table></figure></div>

<h2 id="登录centos8："><a href="#登录centos8：" class="headerlink" title="登录centos8："></a>登录centos8：</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@CentOS7 ~]<span class="comment">#ssh 192.168.37.106</span></span><br><span class="line">    Activate the web console with: systemctl <span class="built_in">enable</span> --now cockpit.socket</span><br><span class="line"></span><br><span class="line">    Last login: Wed Nov  6 20:43:03 2019 from 192.168.37.1</span><br><span class="line">    [root@CentOS8 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure></div>

<h2 id="centos6同上"><a href="#centos6同上" class="headerlink" title="centos6同上;"></a>centos6同上;</h2><pre><code>为增强centos7堡垒机的安全，给私钥设置密码：</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@CentOS7 ~]<span class="comment">#ssh-keygen -p</span></span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> the key is (/root/.ssh/id_rsa): </span><br><span class="line">Enter new passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved with the new passphrase.</span><br></pre></td></tr></table></figure></div>
<h2 id="使用ssh工具代理私钥密码，授权一次密码就不再输密码，除非堡垒机centos7终端退出："><a href="#使用ssh工具代理私钥密码，授权一次密码就不再输密码，除非堡垒机centos7终端退出：" class="headerlink" title="使用ssh工具代理私钥密码，授权一次密码就不再输密码，除非堡垒机centos7终端退出："></a>使用ssh工具代理私钥密码，授权一次密码就不再输密码，除非堡垒机centos7终端退出：</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@CentOS7 ~]<span class="comment">#ssh-agent bash</span></span><br><span class="line">[root@CentOS7 ~]<span class="comment">#ssh-add</span></span><br><span class="line">Enter passphrase <span class="keyword">for</span> /root/.ssh/id_rsa: </span><br><span class="line">Identity added: /root/.ssh/id_rsa (/root/.ssh/id_rsa)</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>SSH</category>
      </categories>
      <tags>
        <tag>SSH</tag>
      </tags>
  </entry>
</search>
